#!/usr/bin/python3
# -*-coding:utf8 -*
"""Module that contains unit tests for the class UFPCA in the fpca.py file.

Written with the help of ChatGPT.

"""
import numpy as np
import pickle
import unittest
import warnings

from pathlib import Path

from FDApy.representation.argvals import DenseArgvals
from FDApy.representation.functional_data import MultivariateFunctionalData
from FDApy.preprocessing.dim_reduction.ufpca import (
    UFPCA,
    _fit_covariance,
    _fit_inner_product,
    _transform_numerical_integration_dense,
    _transform_numerical_integration_irregular,
    _transform_pace_dense,
    _transform_pace_irregular,
    _transform_innpro,
)
from FDApy.preprocessing.dim_reduction.mfpca import (
    MFPCA,
    _fit_covariance_multivariate,
    _fit_inner_product_multivariate,
    _transform_numerical_integration_multivariate,
    _transform_pace_multivariate,
)

THIS_DIR = Path(__file__)


class TestFitCovariance(unittest.TestCase):
    def setUp(self) -> None:
        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

    def test_fit_covariance_dense(self):
        points = DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)})
        results = _fit_covariance(data=self.fdata, points=points, n_components=3)

        expected_eigenvalues = np.array([0.36309962, 0.09906127, 0.02263296])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    -0.63330877,
                    -0.66307611,
                    -0.70297924,
                    -0.74912729,
                    -0.79216577,
                    -0.8307405,
                    -0.87073012,
                    -0.91258916,
                    -0.95222013,
                    -0.98678831,
                    -1.02094135,
                    -1.04848204,
                    -1.07125957,
                    -1.09101892,
                    -1.10511986,
                    -1.12179694,
                    -1.13720052,
                    -1.148285,
                    -1.15231309,
                    -1.14158751,
                    -1.12951258,
                    -1.11792422,
                    -1.10712717,
                    -1.09069923,
                    -1.06568318,
                    -1.04061875,
                    -1.01375962,
                    -0.98667538,
                    -0.95851766,
                    -0.92224652,
                    -0.87542583,
                ],
                [
                    1.48011232,
                    1.37158437,
                    1.31873135,
                    1.28225329,
                    1.23987963,
                    1.19431766,
                    1.13261388,
                    1.05949093,
                    0.98206852,
                    0.89881872,
                    0.81369503,
                    0.72556026,
                    0.6265407,
                    0.51315641,
                    0.37717196,
                    0.23317772,
                    0.09106711,
                    -0.05456713,
                    -0.20979534,
                    -0.36709231,
                    -0.5258664,
                    -0.68474936,
                    -0.82441244,
                    -0.95160711,
                    -1.07801181,
                    -1.19441157,
                    -1.2971339,
                    -1.39302857,
                    -1.47394931,
                    -1.52544301,
                    -1.565734,
                ],
                [
                    1.94296659,
                    1.81291494,
                    1.6045378,
                    1.3614947,
                    1.10651641,
                    0.83331941,
                    0.54209172,
                    0.24714487,
                    -0.05222985,
                    -0.32305191,
                    -0.56313312,
                    -0.76493754,
                    -0.91444813,
                    -1.02521116,
                    -1.10301132,
                    -1.15180787,
                    -1.16766151,
                    -1.11787635,
                    -0.98632954,
                    -0.78632621,
                    -0.57117779,
                    -0.37838878,
                    -0.20374333,
                    -0.02103049,
                    0.21087558,
                    0.4722482,
                    0.76177062,
                    1.05908922,
                    1.33675679,
                    1.59702752,
                    1.82287719,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].values), np.abs(expected_eigenfunctions)
        )

        expected_noise = 0.04699975581503178
        np.testing.assert_almost_equal(results["noise_variance_cov"], expected_noise)

    def test_fit_covariance_irregular(self):
        points = DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)})
        results = _fit_covariance(data=self.fdata_sparse, points=points, n_components=3)

        expected_eigenvalues = np.array([0.35889421, 0.0972388, 0.02281716])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    -0.62716853,
                    -0.61217415,
                    -0.65304732,
                    -0.71599635,
                    -0.79064305,
                    -0.86418455,
                    -0.91956477,
                    -0.94984057,
                    -0.96473273,
                    -0.98443213,
                    -1.01313637,
                    -1.05582788,
                    -1.08892472,
                    -1.10014473,
                    -1.09738209,
                    -1.10173362,
                    -1.11682708,
                    -1.13296235,
                    -1.14623782,
                    -1.15372066,
                    -1.1539675,
                    -1.15317589,
                    -1.13998295,
                    -1.09934424,
                    -1.04767165,
                    -1.00105954,
                    -0.96314344,
                    -0.94020167,
                    -0.93920103,
                    -0.95019785,
                    -0.97242089,
                ],
                [
                    1.35193593,
                    1.31929422,
                    1.32002972,
                    1.30854987,
                    1.27854087,
                    1.23741744,
                    1.18373867,
                    1.11113003,
                    1.01281784,
                    0.89677847,
                    0.78127995,
                    0.67815604,
                    0.59959961,
                    0.52333877,
                    0.42338974,
                    0.26438789,
                    0.09367794,
                    -0.07121943,
                    -0.23341098,
                    -0.38913716,
                    -0.55121472,
                    -0.72503429,
                    -0.88784938,
                    -1.01470238,
                    -1.10117117,
                    -1.17400293,
                    -1.25630004,
                    -1.34526125,
                    -1.43145139,
                    -1.50267701,
                    -1.51861512,
                ],
                [
                    -2.13435773,
                    -1.75434433,
                    -1.51979166,
                    -1.29610595,
                    -1.08924566,
                    -0.87202597,
                    -0.59659601,
                    -0.28249599,
                    0.05321674,
                    0.37856887,
                    0.65826379,
                    0.83984309,
                    0.93501186,
                    0.99163053,
                    1.01619152,
                    1.02815042,
                    1.03082835,
                    1.00034224,
                    0.94688577,
                    0.85603419,
                    0.73250773,
                    0.57334028,
                    0.33781575,
                    0.0196312,
                    -0.3177628,
                    -0.63976655,
                    -0.91644925,
                    -1.14949842,
                    -1.34143895,
                    -1.54852345,
                    -1.73135566,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].values), np.abs(expected_eigenfunctions)
        )

        expected_noise = 0.0
        np.testing.assert_almost_equal(results["noise_variance_cov"], expected_noise)


class TestFitCovarianceMultivariate(unittest.TestCase):
    def setUp(self) -> None:
        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            fdata_sparse = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005_2D.pickle"
        with open(fname, "rb") as handle:
            fdata_2D = pickle.load(handle)

        self.fdata_multi = MultivariateFunctionalData([fdata, fdata_sparse])
        self.fdata_multi_2d = MultivariateFunctionalData([fdata, fdata_2D])

    def test_fit_covariance_dense_and_sparse(self):
        univariate_expansions = [
            {"method": "UFPCA", "n_components": 15, "method_smoothing": "PS"},
            {"method": "UFPCA", "n_components": 15, "method_smoothing": "PS"},
        ]
        points = [
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 21)}),
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)}),
        ]
        results = _fit_covariance_multivariate(
            data=self.fdata_multi,
            points=points,
            n_components=3,
            univariate_expansions=univariate_expansions,
        )

        expected_eigenvalues = np.array([0.72010437, 0.19499147, 0.04457733])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues, decimal=3
        )

        expected_eigenfunctions_0 = np.array(
            [
                [
                    7.09575364e-01,
                    -1.66890419e-03,
                    -2.78227829e-04,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                ],
                [
                    -2.77959792e-03,
                    -7.09049746e-01,
                    2.49062915e-03,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                ],
                [
                    -2.30344262e-03,
                    3.87482869e-03,
                    -7.01089322e-01,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                    0.00000000e00,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[0].coefficients),
            np.abs(expected_eigenfunctions_0),
            decimal=3,
        )

        expected_eigenfunctions_1 = np.array(
            [
                [
                    0.70461932,
                    0.0030674,
                    -0.00262033,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                [
                    -0.00201623,
                    0.70521875,
                    0.00443445,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                [
                    0.00469104,
                    0.00190581,
                    0.71304131,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[1].coefficients),
            np.abs(expected_eigenfunctions_1),
            decimal=3,
        )

    def test_fit_covariance_2d(self):
        univariate_expansions = [
            {"method": "UFPCA", "n_components": 15, "method_smoothing": "PS"},
            {"method": "FCPTPA", "n_components": 15, "method_smoothing": "PS"},
        ]
        points = [
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 21)}),
            DenseArgvals(
                {
                    "input_dim_0": np.linspace(0, 1, 31),
                    "input_dim_1": np.linspace(0, 1, 31),
                }
            ),
        ]
        results = _fit_covariance_multivariate(
            data=self.fdata_multi_2d,
            points=points,
            n_components=3,
            univariate_expansions=univariate_expansions,
        )

        expected_eigenvalues = np.array([0.40113046, 0.10898029, 0.02771297])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues, decimal=2
        )

        expected_eigenfunctions_0 = np.array(
            [
                [
                    -0.9480348,
                    0.03061559,
                    -0.00570084,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                [
                    0.11484949,
                    0.94308767,
                    -0.0422018,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                [
                    -0.12437979,
                    0.17685978,
                    0.80614579,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[0].coefficients),
            np.abs(expected_eigenfunctions_0),
            decimal=0,
        )

        # expected_eigenfunctions_1 = np.array(
        #     [
        #         [
        #             -3.14061207e01,
        #             -4.83015734e00,
        #             -9.42748076e-01,
        #             -3.96441261e00,
        #             -1.33354669e00,
        #             5.28214479e-02,
        #             -2.00779416e-01,
        #             -1.38337512e-01,
        #             8.18474058e-02,
        #             -6.78809382e-02,
        #             -9.71975617e-02,
        #             -1.67440039e-01,
        #             -5.32737223e-02,
        #             6.11220565e-02,
        #             5.10586798e-03,
        #         ],
        #         [
        #             -2.46518659e01,
        #             -2.44703373e00,
        #             -1.84760727e01,
        #             -2.23059393e00,
        #             1.94657050e00,
        #             -2.02785690e00,
        #             -8.86454071e-01,
        #             -7.35562745e-02,
        #             -5.39541338e-01,
        #             -2.36899755e-01,
        #             8.01066832e-02,
        #             2.06668741e-01,
        #             -1.36786908e-01,
        #             2.96367322e-01,
        #             -4.95357686e-02,
        #         ],
        #         [
        #             4.22178375e01,
        #             -3.20197005e01,
        #             1.19588558e01,
        #             9.17329499e00,
        #             -7.22215716e00,
        #             -3.84089451e00,
        #             2.45052092e-01,
        #             5.10674370e-01,
        #             -2.15996058e-01,
        #             -2.56657235e-02,
        #             -3.30750991e-02,
        #             1.82626271e-01,
        #             -7.59631622e-02,
        #             -7.66878590e-02,
        #             -9.80110177e-02,
        #         ],
        #     ]
        # )
        # np.testing.assert_array_almost_equal(
        #     np.abs(results["eigenfunctions"].data[1].coefficients),
        #     np.abs(expected_eigenfunctions_1),
        #     decimal=0,
        # )


class TestFitInnerProduct(unittest.TestCase):
    def setUp(self) -> None:
        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005_2D.pickle"
        with open(fname, "rb") as handle:
            self.fdata_2D = pickle.load(handle)

    def test_fit_inner_product_dense(self):
        points = DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)})
        results = _fit_inner_product(
            data=self.fdata, points=points, n_components=3, method_smoothing="LP"
        )

        expected_eigenvalues = np.array([0.35990547, 0.09830406, 0.02307566])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    -0.66939578,
                    -0.62821807,
                    -0.6375019,
                    -0.59143664,
                    -0.65275406,
                    -0.72786177,
                    -0.70982077,
                    -0.69583644,
                    -0.76769812,
                    -0.69527577,
                    -0.7129829,
                    -0.82522984,
                    -0.72027085,
                    -0.81832689,
                    -0.79450715,
                    -0.75998933,
                    -0.84302765,
                    -0.85474953,
                    -0.92201953,
                    -0.83935836,
                    -0.88211874,
                    -0.83258231,
                    -0.87745323,
                    -0.89345265,
                    -0.8912235,
                    -0.96512444,
                    -0.89571963,
                    -0.98265186,
                    -1.00849659,
                    -1.00833648,
                    -1.03088435,
                    -0.93580678,
                    -0.99548727,
                    -1.00797157,
                    -1.06447269,
                    -1.05350094,
                    -0.96302847,
                    -1.05278021,
                    -1.08347508,
                    -1.01983545,
                    -1.09667461,
                    -1.08003181,
                    -1.07080982,
                    -1.09839104,
                    -1.21805996,
                    -1.09392362,
                    -1.08082043,
                    -1.02955596,
                    -1.07952352,
                    -1.11796774,
                    -1.13875088,
                    -1.11369663,
                    -1.17141129,
                    -1.09428624,
                    -1.11271808,
                    -1.16646464,
                    -1.18251771,
                    -1.125141,
                    -1.16939931,
                    -1.19164318,
                    -1.20913703,
                    -1.10111583,
                    -1.13932875,
                    -1.09775581,
                    -1.1518072,
                    -1.12161949,
                    -1.10625525,
                    -1.13956028,
                    -1.16658618,
                    -1.13898087,
                    -1.10066164,
                    -1.11841442,
                    -1.09958718,
                    -1.02791747,
                    -1.17888097,
                    -1.08806692,
                    -1.08116832,
                    -1.1430986,
                    -1.10117,
                    -1.08672722,
                    -1.0341491,
                    -1.01760283,
                    -1.01590773,
                    -1.10537436,
                    -1.07584258,
                    -0.99168307,
                    -1.00404995,
                    -1.03835938,
                    -0.9419309,
                    -1.01191771,
                    -0.97643765,
                    -0.95246036,
                    -1.03063336,
                    -0.99093317,
                    -0.97814275,
                    -0.90172363,
                    -0.92124444,
                    -0.92366809,
                    -0.90554549,
                    -0.86212598,
                    -0.90290739,
                ],
                [
                    1.41353807,
                    1.56079447,
                    1.43753347,
                    1.29799042,
                    1.31504692,
                    1.36764046,
                    1.25115658,
                    1.37707519,
                    1.25858432,
                    1.16923753,
                    1.29765514,
                    1.35132794,
                    1.32786979,
                    1.23820054,
                    1.22199937,
                    1.28177082,
                    1.18232571,
                    1.28636577,
                    1.06669524,
                    1.05963479,
                    1.26337456,
                    1.09474014,
                    1.07198281,
                    0.92345993,
                    1.15955441,
                    0.93975101,
                    1.13855678,
                    1.01666974,
                    0.91145747,
                    0.9495871,
                    0.88524715,
                    0.84250615,
                    0.77231229,
                    0.86764056,
                    0.86454942,
                    0.7141399,
                    0.74557348,
                    0.64761842,
                    0.74099253,
                    0.63195727,
                    0.64157744,
                    0.64894372,
                    0.58970926,
                    0.58317047,
                    0.43923733,
                    0.48798602,
                    0.38341907,
                    0.38017256,
                    0.2707739,
                    0.19665045,
                    0.29088349,
                    0.24669824,
                    0.1636775,
                    0.07973121,
                    0.07123387,
                    -0.05303268,
                    0.00988026,
                    -0.14073087,
                    -0.03547962,
                    -0.15152012,
                    -0.17754335,
                    -0.22158336,
                    -0.26988131,
                    -0.24362096,
                    -0.56583864,
                    -0.45463479,
                    -0.52102855,
                    -0.55703277,
                    -0.63643729,
                    -0.7199779,
                    -0.46810927,
                    -0.70937296,
                    -0.74793439,
                    -0.83010926,
                    -0.87065651,
                    -0.84333057,
                    -0.98508476,
                    -1.1056996,
                    -0.99586282,
                    -1.05080072,
                    -1.03824254,
                    -1.02594009,
                    -1.06666155,
                    -1.14238593,
                    -1.2527624,
                    -1.37784802,
                    -1.2513184,
                    -1.28579613,
                    -1.30832115,
                    -1.47989118,
                    -1.29699369,
                    -1.46810003,
                    -1.48384029,
                    -1.34357349,
                    -1.5735297,
                    -1.43202504,
                    -1.57774655,
                    -1.55797341,
                    -1.48585818,
                    -1.59002122,
                    -1.55262959,
                ],
                [
                    -1.73880563,
                    -2.12357302,
                    -1.95679498,
                    -1.88988761,
                    -1.75898553,
                    -1.52074858,
                    -1.48129382,
                    -1.76620225,
                    -1.72114115,
                    -1.48459934,
                    -1.49079582,
                    -1.20099372,
                    -0.91623543,
                    -0.91523951,
                    -1.1683183,
                    -1.18806654,
                    -0.95737305,
                    -0.77133191,
                    -0.71090957,
                    -0.52700566,
                    -0.61533592,
                    -0.43551542,
                    -0.31152239,
                    -0.39688243,
                    -0.3813786,
                    -0.12400356,
                    0.33563125,
                    0.15759706,
                    0.02807318,
                    0.09286289,
                    0.49887281,
                    0.51448843,
                    0.42127459,
                    0.56004734,
                    0.48516687,
                    0.59493394,
                    0.80148887,
                    0.7972961,
                    0.70513338,
                    0.75424932,
                    1.01367922,
                    1.26501334,
                    1.02037158,
                    0.71746148,
                    1.28332365,
                    1.05478298,
                    0.92670307,
                    1.20346705,
                    1.17847339,
                    0.72467489,
                    1.16351924,
                    1.22759183,
                    1.28560439,
                    1.14877441,
                    1.03522611,
                    1.26554525,
                    1.18405288,
                    1.08344762,
                    1.21347351,
                    1.11591779,
                    0.97874933,
                    0.91449662,
                    0.94736767,
                    0.83351695,
                    0.53675921,
                    0.64092502,
                    0.51568052,
                    0.46407129,
                    0.59029637,
                    0.2675389,
                    0.643558,
                    0.27423085,
                    0.3609972,
                    -0.05869929,
                    0.04417313,
                    0.15540865,
                    0.35372358,
                    -0.1349564,
                    0.0855041,
                    -0.12874788,
                    -0.23719317,
                    -0.28943658,
                    -0.30968539,
                    -0.59139015,
                    -0.40544164,
                    -0.64086853,
                    -0.60773147,
                    -0.83933016,
                    -0.92220713,
                    -0.86353736,
                    -1.29213239,
                    -1.23927098,
                    -1.01735788,
                    -1.16727453,
                    -1.30739185,
                    -1.50546456,
                    -1.84503264,
                    -1.58635963,
                    -1.63227042,
                    -1.74915259,
                    -1.78137143,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].values), np.abs(expected_eigenfunctions)
        )

        expected_eigenvectors = np.array(
            [
                [-5.19447097e-02, -1.07364355e-01, 1.08341956e-01],
                [3.13386768e-02, 7.48618140e-03, 1.56934607e-02],
                [-8.80696189e-02, -1.79541926e-02, -1.00982071e-01],
                [3.12043115e-02, -4.40233565e-02, -9.99531768e-02],
                [-6.47051685e-02, -1.72160222e-02, 1.28374360e-01],
                [-6.96942141e-02, 5.27859833e-03, -3.39891306e-02],
                [8.66286766e-02, 3.30003327e-02, -2.87625209e-02],
                [1.03090482e-01, 4.61595993e-02, -9.54156020e-03],
                [1.84466557e-02, 2.34792567e-02, -9.89545903e-02],
                [-8.01944792e-02, 3.82204134e-02, -9.38761552e-02],
                [1.15388239e-01, 5.13487106e-02, -1.38419767e-01],
                [-6.67537106e-02, 6.00736557e-02, 1.46800677e-01],
                [-1.86596526e-02, -7.91572019e-02, 4.53047334e-02],
                [1.47485422e-02, -7.53092192e-02, -5.78783462e-02],
                [1.02030869e-01, -1.67644503e-01, 2.23472728e-02],
                [-2.20199185e-02, -6.56025091e-02, 5.84058738e-04],
                [7.05015003e-02, -7.88868368e-03, 2.06067263e-02],
                [-7.11973322e-03, -8.18543885e-02, -5.46622141e-03],
                [4.68798190e-02, 3.09686221e-02, 2.11376364e-03],
                [1.13994427e-01, -1.60256919e-01, 2.91972229e-02],
                [-5.22163405e-02, 5.71957303e-02, -1.19010757e-01],
                [3.26415618e-02, -1.17738452e-01, 2.14419382e-02],
                [9.87119777e-02, 1.15209344e-01, 1.48752307e-02],
                [-7.82813483e-02, -8.65143113e-02, -9.76578262e-02],
                [-8.77115985e-02, -9.53936445e-02, -4.39059372e-02],
                [6.73759955e-02, 1.45714211e-01, -1.62682942e-01],
                [1.65463374e-02, -6.27486762e-02, 1.59021441e-01],
                [-1.74044083e-01, -1.41965431e-01, -9.73629567e-02],
                [2.02837695e-01, -1.30014710e-01, -9.99591454e-02],
                [-1.54990222e-02, -1.21577178e-01, 4.87475962e-03],
                [1.84885261e-01, -7.27375073e-02, -1.38935805e-02],
                [-5.98098855e-02, 8.48969084e-02, 4.41346227e-02],
                [-1.03542067e-01, 2.11449840e-02, 2.29825285e-01],
                [-4.57768495e-02, 8.67285077e-02, -3.85752787e-02],
                [7.92110470e-02, 1.21215695e-01, 8.66908067e-03],
                [-6.48677444e-02, 1.32322956e-01, -1.11076503e-01],
                [-3.51998229e-02, -7.02065186e-02, -1.43251015e-01],
                [1.40185962e-01, 8.61533714e-02, -9.22944800e-02],
                [-2.24903170e-02, -1.03583261e-01, -8.42384682e-02],
                [1.10812824e-02, 4.17639109e-02, -5.47154361e-02],
                [-8.12796290e-02, 1.00426779e-01, -6.46223090e-02],
                [1.68052229e-01, -1.96753691e-02, 2.33794348e-02],
                [7.28038287e-02, -4.27438652e-02, 1.19630626e-01],
                [-1.17150740e-01, 8.63202880e-02, 4.76618644e-02],
                [3.22047217e-02, 1.06793117e-01, 3.53611132e-02],
                [-2.03631171e-01, 2.96547374e-01, -1.04498116e-02],
                [-4.91955305e-02, -1.32272519e-01, 3.51020168e-02],
                [1.35583985e-01, -9.57522299e-02, 2.16974252e-01],
                [1.99270613e-01, 4.67819138e-02, -6.44195007e-02],
                [-2.19735174e-01, -2.52507634e-01, 9.40893584e-02],
                [-1.04976570e-01, 1.35343696e-01, 1.55033584e-01],
                [2.10135927e-02, 5.77331634e-02, -3.31782618e-02],
                [1.02513147e-02, 2.12559565e-02, 4.17120572e-02],
                [-4.70570063e-02, 4.36890848e-02, 1.09061920e-02],
                [-9.48441348e-02, -1.41609119e-01, -1.52228759e-01],
                [6.11750669e-02, -1.64138314e-01, -7.11235344e-02],
                [-2.81098464e-02, -1.45617549e-01, 1.73424141e-01],
                [-9.67657627e-04, 3.81567463e-02, 2.72908842e-03],
                [-1.31496588e-02, 2.09996010e-01, 1.79382386e-01],
                [9.27778771e-02, 1.46899219e-01, 1.82265026e-02],
                [2.25028463e-03, -6.05279291e-02, 1.63692129e-01],
                [-1.17630178e-01, -7.72643296e-02, 7.79732452e-02],
                [-1.78025464e-01, 3.90284540e-02, 1.65666629e-02],
                [1.69146117e-02, -7.64040058e-02, -8.22763385e-02],
                [-1.28750133e-01, -6.72200946e-02, -1.63575097e-02],
                [1.11089420e-01, -3.38653842e-02, 1.38263024e-01],
                [7.34224108e-02, 1.22992462e-01, -9.82820672e-02],
                [-4.90255465e-02, -1.37954707e-01, 2.37348629e-02],
                [-2.85605492e-02, -4.57776485e-02, -1.86810928e-02],
                [4.81127079e-02, 3.24070725e-02, 1.66857052e-01],
                [-2.32143682e-02, -1.75406894e-04, -1.65102357e-01],
                [1.46569096e-02, 8.77230757e-02, 4.07136359e-02],
                [-4.55106308e-02, 1.22058268e-01, 9.41505427e-02],
                [8.12721985e-02, -8.37577830e-02, -5.91552118e-02],
                [-1.57949373e-01, 5.01148564e-02, -9.99586060e-02],
                [8.93611883e-02, -1.25899496e-01, -2.30735066e-01],
                [1.38110461e-01, 1.72300410e-01, -1.52663753e-01],
                [-6.08632860e-02, 3.78399346e-02, 2.57127121e-02],
                [1.26549216e-02, -5.71840161e-02, -1.44632810e-02],
                [-6.88721316e-02, 3.97365349e-02, -4.02439296e-02],
                [-5.29638647e-02, 5.30376969e-02, 6.98220071e-02],
                [3.17644870e-02, 1.60993595e-01, 1.70534393e-01],
                [1.11656484e-01, -2.42954706e-01, 1.11528523e-01],
                [-1.44499253e-01, 1.15466174e-01, -1.56937408e-02],
                [1.41375256e-01, 3.66078241e-02, 1.30313885e-01],
                [-1.02737178e-01, 1.64447958e-01, 1.12971887e-01],
                [7.78224846e-02, 1.46087540e-01, 5.99399112e-02],
                [1.37439109e-01, -3.50872297e-02, -1.60502360e-02],
                [-9.21742771e-02, -6.22532946e-02, -5.77951523e-02],
                [-5.51914612e-02, -1.77272108e-02, -1.35267835e-01],
                [-2.62420710e-01, -7.73257243e-02, 1.67798328e-02],
                [1.11439394e-02, 5.27574024e-02, -1.76069466e-01],
                [2.58447927e-01, 6.05486584e-02, 6.67627906e-02],
                [-1.86697542e-01, -5.67714083e-02, 1.14613308e-01],
                [3.05088461e-02, -4.20736192e-02, -1.86676327e-02],
                [4.39787628e-02, 3.90533949e-02, -1.75813045e-01],
                [-8.63341966e-02, 6.92012845e-02, -1.17173282e-01],
                [3.34194194e-02, -1.62723080e-03, 1.03053337e-01],
                [-1.36524854e-02, -6.29844755e-03, -7.77046764e-02],
                [1.85335711e-01, 1.17389964e-02, 1.87026265e-01],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenvectors"]), np.abs(expected_eigenvectors)
        )

    def test_fit_inner_product_sparse(self):
        points = DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)})
        results = _fit_inner_product(
            data=self.fdata_sparse, points=points, n_components=3, method_smoothing="LP"
        )

        expected_eigenvalues = np.array([0.35480055, 0.09622815, 0.02293863])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    0.58962429,
                    0.60366392,
                    0.61841956,
                    0.63324667,
                    0.64815102,
                    0.66293353,
                    0.67757619,
                    0.69216489,
                    0.70658407,
                    0.72095651,
                    0.73529653,
                    0.74946751,
                    0.76348954,
                    0.77742497,
                    0.79120921,
                    0.80473844,
                    0.81819119,
                    0.8314577,
                    0.84458883,
                    0.85756288,
                    0.87036195,
                    0.88292774,
                    0.89526543,
                    0.90743809,
                    0.919394,
                    0.93107538,
                    0.94257466,
                    0.95381574,
                    0.96482856,
                    0.97559438,
                    0.98605423,
                    0.99629975,
                    1.00619753,
                    1.01588484,
                    1.02520879,
                    1.03427368,
                    1.04304617,
                    1.0514957,
                    1.05969808,
                    1.06749174,
                    1.0748766,
                    1.08192274,
                    1.08868068,
                    1.09510997,
                    1.10121368,
                    1.10685904,
                    1.11209558,
                    1.11696056,
                    1.12146624,
                    1.1255134,
                    1.12913806,
                    1.1323859,
                    1.13533813,
                    1.13775405,
                    1.13973527,
                    1.1414193,
                    1.14262874,
                    1.1434738,
                    1.1439334,
                    1.1440541,
                    1.14382818,
                    1.14317699,
                    1.14209428,
                    1.14073792,
                    1.13909764,
                    1.1371093,
                    1.13472365,
                    1.13197059,
                    1.12898658,
                    1.12563634,
                    1.1220105,
                    1.11803671,
                    1.11375685,
                    1.10919997,
                    1.10436894,
                    1.09920598,
                    1.09383517,
                    1.08813238,
                    1.08220696,
                    1.07597427,
                    1.06945838,
                    1.06270567,
                    1.0557372,
                    1.0486003,
                    1.04115145,
                    1.03349793,
                    1.02555742,
                    1.01755703,
                    1.00926009,
                    1.000637,
                    0.99198025,
                    0.98312684,
                    0.97403884,
                    0.96473468,
                    0.9554434,
                    0.94579447,
                    0.93590354,
                    0.92594488,
                    0.91597755,
                    0.90594369,
                    0.89746226,
                ],
                [
                    -1.39587861,
                    -1.39292,
                    -1.38993765,
                    -1.38623077,
                    -1.38148638,
                    -1.37559835,
                    -1.36877065,
                    -1.36087023,
                    -1.35182631,
                    -1.34190132,
                    -1.33108318,
                    -1.31928314,
                    -1.30642249,
                    -1.29256683,
                    -1.27777862,
                    -1.26207221,
                    -1.24547402,
                    -1.22791141,
                    -1.20951876,
                    -1.19020365,
                    -1.17001333,
                    -1.14883346,
                    -1.12691371,
                    -1.10416669,
                    -1.0806431,
                    -1.05610565,
                    -1.03078488,
                    -1.00468254,
                    -0.9779063,
                    -0.95022522,
                    -0.92175512,
                    -0.89261628,
                    -0.86253117,
                    -0.83191869,
                    -0.80032693,
                    -0.76806533,
                    -0.73530451,
                    -0.70172522,
                    -0.66748334,
                    -0.63252104,
                    -0.59697409,
                    -0.5606739,
                    -0.523901,
                    -0.48620051,
                    -0.44796915,
                    -0.40914948,
                    -0.36968003,
                    -0.32963103,
                    -0.28924242,
                    -0.2480892,
                    -0.20633204,
                    -0.16414675,
                    -0.12105845,
                    -0.07786867,
                    -0.03434102,
                    0.00984077,
                    0.05405783,
                    0.09878195,
                    0.14349632,
                    0.18821297,
                    0.23316798,
                    0.27817931,
                    0.3230098,
                    0.36787724,
                    0.4127185,
                    0.45736465,
                    0.50178383,
                    0.54590946,
                    0.5896662,
                    0.63294819,
                    0.67603497,
                    0.71851509,
                    0.76046595,
                    0.80175634,
                    0.84245682,
                    0.88243481,
                    0.92177236,
                    0.96024729,
                    0.99783686,
                    1.03464431,
                    1.0703926,
                    1.10513656,
                    1.13882131,
                    1.17160491,
                    1.20302478,
                    1.23328186,
                    1.26214791,
                    1.28980699,
                    1.31606846,
                    1.34090177,
                    1.36443826,
                    1.38649102,
                    1.40672419,
                    1.4255344,
                    1.4424162,
                    1.45741506,
                    1.47120907,
                    1.48303849,
                    1.49306069,
                    1.50085834,
                    1.50874578,
                ],
                [
                    1.94359139,
                    1.89783526,
                    1.84783412,
                    1.79192742,
                    1.73341882,
                    1.67191573,
                    1.60757207,
                    1.54040883,
                    1.47126891,
                    1.39968199,
                    1.32633738,
                    1.25088442,
                    1.17375023,
                    1.0953049,
                    1.01531614,
                    0.93432219,
                    0.85261558,
                    0.76995493,
                    0.68659115,
                    0.60317749,
                    0.51935184,
                    0.43557038,
                    0.35186902,
                    0.2685231,
                    0.18550882,
                    0.10352701,
                    0.02218763,
                    -0.05801165,
                    -0.13717434,
                    -0.21470938,
                    -0.29064605,
                    -0.36494409,
                    -0.43697519,
                    -0.50730618,
                    -0.57489618,
                    -0.64026383,
                    -0.70280095,
                    -0.76238559,
                    -0.8192557,
                    -0.87268663,
                    -0.92270118,
                    -0.96917584,
                    -1.01182955,
                    -1.05070707,
                    -1.08532599,
                    -1.11557259,
                    -1.14139446,
                    -1.16232919,
                    -1.17882858,
                    -1.18946611,
                    -1.19535405,
                    -1.19634821,
                    -1.19147284,
                    -1.18227987,
                    -1.16767032,
                    -1.14881222,
                    -1.12525794,
                    -1.09703127,
                    -1.0647816,
                    -1.02895136,
                    -0.98901333,
                    -0.94512145,
                    -0.8979254,
                    -0.84768241,
                    -0.794092,
                    -0.73771084,
                    -0.67859151,
                    -0.61644171,
                    -0.55213734,
                    -0.48613419,
                    -0.41771171,
                    -0.34727844,
                    -0.27507905,
                    -0.20155822,
                    -0.12641247,
                    -0.05013521,
                    0.02706719,
                    0.1050515,
                    0.18380116,
                    0.26288362,
                    0.34251325,
                    0.42218767,
                    0.50173385,
                    0.58092596,
                    0.66000614,
                    0.73873713,
                    0.81633019,
                    0.89274892,
                    0.96842075,
                    1.04271069,
                    1.11571344,
                    1.18710883,
                    1.25655101,
                    1.32400471,
                    1.38911263,
                    1.45192341,
                    1.51298168,
                    1.57044321,
                    1.62557937,
                    1.67799638,
                    1.71484456,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].values), np.abs(expected_eigenfunctions)
        )

        expected_eigenvectors = np.array(
            [
                [5.56687875e-02, 1.13051128e-01, -9.90568032e-02],
                [-2.83719408e-02, -4.31008385e-03, -2.49340993e-03],
                [8.62612348e-02, 9.61511363e-03, 1.28809199e-01],
                [-2.71473619e-02, 5.26763997e-02, 1.18594577e-01],
                [6.20762407e-02, 1.84673737e-02, -1.42383782e-01],
                [6.62548348e-02, -1.50236180e-02, 3.61814159e-02],
                [-8.47138998e-02, -3.09106347e-02, 1.86837641e-02],
                [-1.02891164e-01, -4.02078961e-02, 4.32777207e-02],
                [-2.12636660e-02, -2.33798164e-02, 1.11952086e-01],
                [7.93918848e-02, -2.92978338e-02, 8.64812622e-02],
                [-1.08198830e-01, -5.65878521e-02, 1.28804844e-01],
                [7.09732172e-02, -5.14365443e-02, -1.51834118e-01],
                [2.35239255e-02, 8.33330988e-02, -2.24929413e-02],
                [-1.13352218e-02, 8.41291537e-02, 6.12045141e-02],
                [-9.63977345e-02, 1.50060570e-01, -1.17534699e-02],
                [2.40814384e-02, 6.36943961e-02, -1.22139033e-04],
                [-7.38396864e-02, 1.54432665e-02, -4.58081989e-02],
                [6.66957805e-03, 6.79359676e-02, 7.51789664e-03],
                [-4.57813306e-02, -1.35002130e-02, 8.20067757e-03],
                [-1.17854828e-01, 1.51890748e-01, -4.28786448e-02],
                [4.67695929e-02, -5.31115194e-02, 1.32547795e-01],
                [-3.22900792e-02, 1.23655850e-01, -3.05143286e-02],
                [-1.01592969e-01, -1.14382404e-01, 1.85592036e-03],
                [7.75632854e-02, 9.25282393e-02, 8.01766253e-02],
                [8.30705338e-02, 9.04848236e-02, 5.91248026e-02],
                [-7.18416074e-02, -1.53926578e-01, 1.48821115e-01],
                [-1.71324695e-02, 7.14036683e-02, -1.74214315e-01],
                [1.72208633e-01, 1.31980573e-01, 8.78485806e-02],
                [-1.96243016e-01, 1.19935104e-01, 8.44049689e-02],
                [1.17257970e-02, 1.27682466e-01, 1.46988859e-02],
                [-1.93720574e-01, 7.53908835e-02, 1.67988829e-02],
                [6.01183494e-02, -8.95290560e-02, -6.21945199e-02],
                [1.05274998e-01, -2.14129258e-02, -2.31964013e-01],
                [5.43907077e-02, -8.58406615e-02, 1.97628010e-02],
                [-8.06540530e-02, -1.20411082e-01, -2.18506471e-02],
                [6.59094088e-02, -1.37303653e-01, 1.05843690e-01],
                [2.79761920e-02, 5.63906585e-02, 1.27389989e-01],
                [-1.41837876e-01, -8.96766181e-02, 8.66463514e-02],
                [2.69328102e-02, 9.49373353e-02, 9.86016909e-02],
                [-1.17031161e-02, -4.05375267e-02, 5.69308218e-02],
                [8.00055242e-02, -9.18367308e-02, 1.01950206e-01],
                [-1.68457249e-01, 2.18691877e-02, -2.05325185e-02],
                [-6.74032342e-02, 5.81471186e-02, -1.02537402e-01],
                [1.18098513e-01, -9.29434313e-02, -4.74746266e-02],
                [-2.60641977e-02, -9.67325530e-02, -4.38452355e-02],
                [2.02268473e-01, -2.97100409e-01, 1.55962959e-02],
                [4.90851358e-02, 1.29330221e-01, -3.93645735e-02],
                [-1.43031753e-01, 9.83816540e-02, -2.04786528e-01],
                [-2.03158938e-01, -4.02449196e-02, 6.26761405e-02],
                [2.24672180e-01, 2.56218020e-01, -1.01122316e-01],
                [1.03312963e-01, -1.25621667e-01, -1.43556116e-01],
                [-2.34717318e-02, -5.85372592e-02, 4.65104478e-02],
                [-1.58060866e-02, -1.71189373e-02, -5.33518310e-02],
                [3.74525440e-02, -2.52886567e-02, 1.09213092e-02],
                [9.85822711e-02, 1.39696466e-01, 1.40298444e-01],
                [-6.28925818e-02, 1.58576643e-01, 9.04561636e-02],
                [2.57540714e-02, 1.38165004e-01, -1.67601248e-01],
                [-1.56796794e-03, -4.09845636e-02, -4.54578402e-03],
                [6.81968737e-03, -2.16722358e-01, -2.10758940e-01],
                [-9.53149103e-02, -1.39843378e-01, -2.42900614e-02],
                [8.36200984e-04, 6.66524866e-02, -1.47257084e-01],
                [1.18619574e-01, 6.74923749e-02, -7.23121307e-02],
                [1.78483464e-01, -3.87896124e-02, -2.83503795e-02],
                [-1.51006534e-02, 6.50290484e-02, 7.83038706e-02],
                [1.26101078e-01, 5.46464097e-02, -1.20788373e-02],
                [-1.15549365e-01, 3.15338562e-02, -1.51251426e-01],
                [-7.35628833e-02, -1.24132632e-01, 7.54298537e-02],
                [4.88636667e-02, 1.41953324e-01, -2.29849042e-02],
                [3.38071157e-02, 3.55446128e-02, 2.31579104e-02],
                [-4.56643849e-02, -4.36557002e-02, -1.65046483e-01],
                [2.52941320e-02, 2.89101652e-03, 1.61427736e-01],
                [-8.86159590e-03, -8.84116116e-02, -3.59145163e-02],
                [4.49115844e-02, -1.22474689e-01, -8.96447634e-02],
                [-7.78558454e-02, 7.92469806e-02, 5.45527851e-02],
                [1.54684027e-01, -5.88211902e-02, 8.74217531e-02],
                [-9.23350312e-02, 1.34590427e-01, 2.31954808e-01],
                [-1.40127436e-01, -1.81004970e-01, 1.22920675e-01],
                [6.19358840e-02, -3.22661001e-02, -2.24425216e-02],
                [-1.96603104e-02, 5.97157811e-02, 3.01324049e-02],
                [6.63569639e-02, -3.69326274e-02, 5.86914226e-02],
                [5.52534065e-02, -5.26292048e-02, -5.08412953e-02],
                [-3.24213973e-02, -1.54033421e-01, -1.76228785e-01],
                [-1.12292112e-01, 2.56784150e-01, -1.10350356e-01],
                [1.46344164e-01, -1.05388429e-01, 1.20351396e-02],
                [-1.46817480e-01, -3.69702782e-02, -9.55116929e-02],
                [1.04493839e-01, -1.83992462e-01, -1.19258931e-01],
                [-7.39498398e-02, -1.47144237e-01, -4.35728357e-02],
                [-1.34226532e-01, 2.19398859e-02, 3.10158998e-03],
                [9.61802580e-02, 5.58430182e-02, 5.56048994e-02],
                [5.85207939e-02, 1.22893876e-02, 1.32211042e-01],
                [2.57652859e-01, 8.30879946e-02, -6.89954986e-03],
                [-1.34842901e-02, -5.18654471e-02, 1.53817635e-01],
                [-2.51802821e-01, -6.56001593e-02, -5.57438604e-02],
                [1.85877387e-01, 6.07911451e-02, -1.16995082e-01],
                [-2.73124096e-02, 5.02417036e-02, 1.81635430e-02],
                [-4.40406257e-02, -4.10158643e-02, 1.87487186e-01],
                [8.48336962e-02, -7.95851537e-02, 1.28410658e-01],
                [-3.11484585e-02, 8.67766465e-04, -1.12271751e-01],
                [1.14713840e-02, -7.16784321e-03, 8.43225241e-02],
                [-1.85220745e-01, -1.05694875e-02, -2.00431625e-01],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenvectors"]), np.abs(expected_eigenvectors)
        )

    def test_fit_inner_product_2d(self):
        points = DenseArgvals(
            {"input_dim_0": np.linspace(0, 1, 31), "input_dim_1": np.linspace(0, 1, 31)}
        )
        results = _fit_inner_product(
            data=self.fdata_2D, points=points, n_components=3, noise_variance=0
        )

        expected_eigenvalues = np.array([0.05593339, 0.01700472, 0.00488822])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    1.34311762,
                    1.41489698,
                    1.40887581,
                    1.44340542,
                    1.43585101,
                    1.58985029,
                    1.48494936,
                    1.70704821,
                    1.88101736,
                    1.67627507,
                    1.60184869,
                    1.67938482,
                    1.73477469,
                    1.83402462,
                    1.65189818,
                    1.74607786,
                    1.84006124,
                    1.87312143,
                    1.70198765,
                    1.82900658,
                    1.72751755,
                    1.84602637,
                    1.8756389,
                    1.94840156,
                    2.01580159,
                    2.01544095,
                    1.75202513,
                    1.79069446,
                    1.98630936,
                    1.86013354,
                    1.88864624,
                    1.85510213,
                    1.7754423,
                    1.80859259,
                    1.98559596,
                    2.01190189,
                    1.86145672,
                    1.8295786,
                    1.66075118,
                    1.83307838,
                    1.93365029,
                    1.90630018,
                    1.84196571,
                    1.92940118,
                    1.78710007,
                    1.75289792,
                    1.76750884,
                    1.93029844,
                    1.85303651,
                    1.7808326,
                    1.7640994,
                    1.64550205,
                    1.67808574,
                    1.83052604,
                    1.64300655,
                    1.42390756,
                    1.68815324,
                    1.60550202,
                    1.72536993,
                    1.64633743,
                    1.46547473,
                    1.45075103,
                    1.62677219,
                    1.57370236,
                    1.33948157,
                    1.48257459,
                    1.25176223,
                    1.20776055,
                    1.58633604,
                    1.20608707,
                    1.24268637,
                    1.18983992,
                    1.4132905,
                    1.21134513,
                    1.14127434,
                    0.96642176,
                    1.06518276,
                    1.03367692,
                    0.86482637,
                    1.0674653,
                    0.85131815,
                    0.803416,
                    0.77771851,
                    0.69163386,
                    0.71299974,
                    0.78808618,
                    0.65654042,
                    0.66373651,
                    0.84323177,
                    0.64337631,
                    0.52180764,
                    0.5204157,
                    0.75601517,
                    0.64358678,
                    0.50119196,
                    0.28373754,
                    0.3707976,
                    0.45905262,
                    0.40978914,
                    0.48863962,
                    0.19769161,
                ],
                [
                    -0.13134881,
                    -0.10584411,
                    0.33613875,
                    0.22209449,
                    -0.05476683,
                    -0.05424039,
                    0.33905176,
                    0.05764051,
                    0.08790025,
                    0.41875138,
                    0.19788158,
                    0.22908968,
                    0.51178825,
                    0.42801019,
                    0.43794104,
                    0.42110381,
                    0.36238804,
                    0.57420804,
                    0.30946622,
                    1.01380289,
                    1.02926997,
                    0.81335223,
                    0.7922318,
                    1.35078019,
                    1.24957509,
                    0.88021809,
                    1.27821584,
                    1.03683602,
                    1.22227728,
                    1.38329077,
                    1.52902714,
                    1.56968038,
                    1.45837959,
                    1.52479763,
                    1.36958093,
                    1.48366154,
                    1.49546156,
                    1.88794188,
                    1.5759391,
                    1.54456942,
                    1.66267276,
                    2.18896849,
                    1.7639262,
                    2.08782284,
                    2.01786618,
                    1.86828888,
                    2.07230206,
                    2.16227159,
                    2.04248767,
                    2.0085285,
                    2.0319536,
                    1.95400705,
                    2.17585152,
                    2.08341814,
                    1.99714487,
                    1.94163672,
                    2.10754245,
                    2.30038273,
                    2.17025561,
                    2.06525685,
                    1.95435764,
                    2.07432041,
                    2.11073653,
                    1.86569534,
                    2.41346813,
                    2.1947463,
                    1.92911553,
                    1.86369336,
                    1.65448657,
                    2.0266736,
                    1.56165533,
                    2.10014138,
                    1.96384708,
                    1.6703474,
                    1.7563413,
                    1.55433007,
                    1.57258245,
                    1.72240132,
                    1.1058055,
                    1.28757612,
                    1.59330033,
                    1.26576009,
                    1.13252676,
                    1.24691085,
                    1.06710069,
                    0.95306992,
                    1.14180258,
                    0.68575401,
                    0.76977512,
                    1.11909789,
                    1.10027057,
                    0.70409813,
                    0.93153425,
                    1.07182475,
                    0.56464425,
                    0.75137744,
                    0.48954058,
                    0.77056273,
                    0.90754272,
                    0.42740918,
                    0.61463189,
                ],
                [
                    -4.44076049,
                    -4.78482664,
                    -4.6816685,
                    -4.32312985,
                    -4.50328538,
                    -4.31258941,
                    -3.90374776,
                    -3.90523784,
                    -4.03387001,
                    -3.78478501,
                    -3.54151065,
                    -3.59127514,
                    -3.13260193,
                    -3.56481054,
                    -3.46219965,
                    -3.844908,
                    -3.39778317,
                    -3.89728296,
                    -2.60098337,
                    -2.5357673,
                    -2.64313483,
                    -2.03744264,
                    -2.54783615,
                    -2.94440299,
                    -2.53229416,
                    -2.12148532,
                    -2.21216431,
                    -1.99454258,
                    -1.46243753,
                    -1.42971923,
                    -2.14102487,
                    -1.44878,
                    -1.04096112,
                    -1.38940131,
                    -0.44797291,
                    -0.8417233,
                    -0.37939371,
                    -1.00578855,
                    0.00591356,
                    -0.32655971,
                    0.41405514,
                    -0.45433356,
                    -0.09833534,
                    0.28749278,
                    -0.33637289,
                    0.78972855,
                    -0.30773313,
                    0.22491149,
                    0.55432383,
                    0.16172563,
                    0.88259032,
                    0.41203413,
                    0.9674987,
                    0.65010285,
                    0.98884943,
                    0.98218364,
                    0.54303636,
                    0.90385427,
                    1.258932,
                    1.23557395,
                    0.85210526,
                    1.26323413,
                    1.09683669,
                    1.11737962,
                    1.39074983,
                    1.44047886,
                    0.96273342,
                    1.55614556,
                    1.16107614,
                    1.42703759,
                    1.49109494,
                    2.26340548,
                    1.51767856,
                    1.25773965,
                    1.72733109,
                    1.22548876,
                    1.95239929,
                    0.66667712,
                    1.22435693,
                    0.92338443,
                    0.87305184,
                    1.04378683,
                    0.79946858,
                    1.10654119,
                    0.67069578,
                    0.71171593,
                    0.99739807,
                    1.29247384,
                    1.10541955,
                    0.5155807,
                    0.79615305,
                    1.06090802,
                    0.94960272,
                    0.69521478,
                    0.33374182,
                    0.81005777,
                    0.71584094,
                    0.52027013,
                    0.49841738,
                    0.7531538,
                    0.52444659,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].values[:, 0]),
            np.abs(expected_eigenfunctions),
        )

        expected_eigenvectors = np.array(
            [
                [-0.02478052, 0.19704852, -0.11322648],
                [-0.06559546, 0.06084416, 0.02588201],
                [0.1092945, 0.04025083, 0.03314717],
                [0.00926018, 0.06647725, 0.13734249],
                [0.01325195, 0.00920156, -0.1345378],
                [0.06720341, -0.00873046, 0.00206291],
                [-0.0295933, -0.10120912, 0.01818244],
                [-0.04588687, -0.10167812, 0.06591057],
                [-0.0008623, 0.01254694, 0.06337633],
                [0.06142619, 0.04109768, -0.0072811],
                [-0.10252175, 0.02436189, 0.11760938],
                [0.06226508, -0.14791061, -0.12658558],
                [0.07539783, -0.02833379, 0.04597973],
                [0.02490737, 0.06935203, 0.05015007],
                [-0.01219617, 0.0105675, 0.13569112],
                [0.0292805, 0.05603073, -0.02012811],
                [-0.10589005, 0.06180713, -0.01726319],
                [0.0575498, -0.01369198, 0.02778009],
                [-0.11524962, 0.12673792, -0.02540351],
                [-0.08100391, 0.08386064, 0.10248113],
                [-0.01530634, 0.1337682, 0.03915312],
                [-0.06561366, 0.17847279, 0.00474339],
                [-0.10605497, -0.09734514, 0.01284604],
                [0.08636768, 0.12021909, 0.05531598],
                [0.13842204, 0.01894325, 0.06910275],
                [-0.13186572, 0.04843518, 0.05893503],
                [-0.07682991, 0.07799207, -0.10757505],
                [0.32179871, -0.10375883, 0.09649541],
                [-0.12417456, 0.08361207, 0.18419266],
                [0.06349135, 0.04492816, 0.06116925],
                [-0.11098697, -0.02757588, 0.15116187],
                [-0.04645775, 0.05733564, -0.17226764],
                [0.08143269, -0.14349328, -0.18634342],
                [0.00896005, -0.00430729, -0.02942599],
                [-0.16595356, 0.02153532, -0.02935731],
                [0.02731831, -0.01961477, -0.01299862],
                [0.08206412, 0.04123104, 0.07605796],
                [-0.03593125, -0.21069852, 0.111173],
                [0.01823385, 0.1852414, 0.02962521],
                [-0.02490467, 0.01669724, 0.04983547],
                [-0.06147972, 0.21228126, -0.06182083],
                [-0.12927321, -0.034913, 0.08277863],
                [-0.05312765, -0.02378546, -0.03549432],
                [0.01651832, 0.040844, -0.17573007],
                [-0.04976537, -0.07909607, -0.04173025],
                [0.02882474, -0.02085084, -0.22000652],
                [0.03849427, 0.12074315, 0.00681693],
                [-0.11626811, -0.04966136, -0.02479148],
                [-0.0490996, -0.25927019, 0.21473794],
                [0.18127638, 0.25690209, -0.10688523],
                [0.00104383, -0.05446475, -0.19631724],
                [-0.09441932, 0.10412991, -0.02437305],
                [0.00148083, -0.0818471, -0.01482498],
                [0.02562728, -0.00085799, -0.04635057],
                [0.2116772, 0.01101277, 0.13942234],
                [0.03707141, 0.05593191, 0.15334918],
                [-0.00448509, 0.09056202, -0.1141067],
                [-0.02063131, -0.01262271, -0.00854663],
                [-0.10657842, -0.15891492, -0.22882899],
                [-0.10150644, -0.1392868, -0.00385368],
                [0.01168157, -0.03625952, -0.11974369],
                [0.18327627, -0.11698746, -0.03428192],
                [0.15440662, -0.04325489, -0.14734254],
                [-0.0349136, 0.15805404, 0.06990716],
                [0.20275631, -0.10727769, -0.04142768],
                [-0.10881511, -0.05141348, -0.05648445],
                [-0.08005792, -0.0555495, 0.01465965],
                [0.11095364, 0.0131653, 0.04912936],
                [0.11360813, -0.10630913, 0.09776344],
                [0.00084486, -0.23665572, -0.02535538],
                [0.09476779, -0.02003612, 0.10954218],
                [-0.04601308, -0.0474531, -0.06029206],
                [-0.02526095, -0.0662663, -0.12928131],
                [0.02675665, -0.05631165, 0.09965322],
                [0.12840394, 0.01826458, -0.03462365],
                [-0.00417158, 0.14968384, 0.19442249],
                [-0.22630375, 0.06126017, 0.06440465],
                [-0.03782011, 0.1251776, -0.07402776],
                [0.03832129, -0.02899091, 0.12452484],
                [0.00830286, 0.09344654, -0.02832821],
                [0.04191096, -0.0709991, -0.0709336],
                [-0.16048579, -0.03661775, -0.17952726],
                [-0.01982053, 0.04703358, 0.10455455],
                [0.1371997, -0.11182092, -0.08838548],
                [-0.16747116, -0.03614854, -0.0185588],
                [0.01663696, -0.12579513, -0.1873529],
                [-0.0670647, -0.19440747, -0.00034577],
                [-0.06577426, -0.079592, 0.10253935],
                [0.08047924, 0.11378542, -0.00421294],
                [0.07819435, 0.04624126, 0.10205842],
                [0.21786113, 0.11757364, -0.11335876],
                [-0.00939962, 0.03310036, 0.09048731],
                [-0.2600097, -0.05067062, 0.051844],
                [0.0960701, 0.12898741, -0.16986033],
                [0.03552344, -0.0414469, 0.04991938],
                [0.10346592, -0.19194636, 0.2124912],
                [0.04849589, 0.04932458, 0.00686136],
                [-0.00081916, -0.12013489, -0.03909399],
                [0.00514548, 0.05856277, 0.02029991],
                [-0.22725762, -0.02797389, -0.09586355],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenvectors"]), np.abs(expected_eigenvectors)
        )


class TestFitInnerProductMultivariate(unittest.TestCase):
    def setUp(self) -> None:
        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005_2D.pickle"
        with open(fname, "rb") as handle:
            self.fdata_2D = pickle.load(handle)

        self.fdata_multi = MultivariateFunctionalData([self.fdata, self.fdata_sparse])
        self.fdata_multi_2d = MultivariateFunctionalData([self.fdata, self.fdata_2D])

    def test_fit_inner_product_dense_and_sparse(self):
        points = [
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 21)}),
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 31)}),
        ]
        results = _fit_inner_product_multivariate(
            data=self.fdata_multi, points=points, n_components=0.95
        )

        expected_eigenvalues = np.array([0.71445791, 0.1942461, 0.04579347])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues, decimal=2
        )

        expected_eigenfunctions_0 = np.array(
            [
                [
                    -0.47409283,
                    -0.44495389,
                    -0.45203584,
                    -0.41925799,
                    -0.46132696,
                    -0.51568622,
                    -0.50242625,
                    -0.49260526,
                    -0.54377574,
                    -0.49227363,
                    -0.50516064,
                    -0.58421729,
                    -0.51099163,
                    -0.57947606,
                    -0.56340034,
                    -0.53875102,
                    -0.59687363,
                    -0.60631401,
                    -0.65360705,
                    -0.59573427,
                    -0.6259277,
                    -0.59059293,
                    -0.62178315,
                    -0.63339785,
                    -0.6317877,
                    -0.68444832,
                    -0.63508194,
                    -0.69632255,
                    -0.71593122,
                    -0.71575453,
                    -0.73159928,
                    -0.66369522,
                    -0.70569074,
                    -0.71608193,
                    -0.75494214,
                    -0.74752271,
                    -0.68333357,
                    -0.74711794,
                    -0.76781028,
                    -0.72388637,
                    -0.777493,
                    -0.76602575,
                    -0.75984439,
                    -0.77905197,
                    -0.86363731,
                    -0.77703509,
                    -0.76745945,
                    -0.73043688,
                    -0.76601262,
                    -0.79421181,
                    -0.80760811,
                    -0.78998797,
                    -0.83146038,
                    -0.77630391,
                    -0.79059871,
                    -0.82772317,
                    -0.83919567,
                    -0.79860323,
                    -0.82924039,
                    -0.84563546,
                    -0.85780398,
                    -0.78174539,
                    -0.80849086,
                    -0.77891338,
                    -0.81777677,
                    -0.7962631,
                    -0.78601368,
                    -0.80852353,
                    -0.82771157,
                    -0.80783659,
                    -0.78117381,
                    -0.79371459,
                    -0.78116265,
                    -0.72869541,
                    -0.83732123,
                    -0.77233328,
                    -0.76780319,
                    -0.81182759,
                    -0.78248913,
                    -0.77116059,
                    -0.73441394,
                    -0.72189786,
                    -0.72196475,
                    -0.78445565,
                    -0.76413952,
                    -0.70472109,
                    -0.71238294,
                    -0.73768032,
                    -0.66953359,
                    -0.7185101,
                    -0.69380991,
                    -0.67660364,
                    -0.7325174,
                    -0.7033202,
                    -0.69485253,
                    -0.64008737,
                    -0.65433732,
                    -0.6571972,
                    -0.64367794,
                    -0.61225986,
                    -0.64115799,
                ],
                [
                    1.01296304,
                    1.11379914,
                    1.02574903,
                    0.92777018,
                    0.93711965,
                    0.97551645,
                    0.89729062,
                    0.98637599,
                    0.90226658,
                    0.83574004,
                    0.92677411,
                    0.96350767,
                    0.94832785,
                    0.88562855,
                    0.87008833,
                    0.91643323,
                    0.84526038,
                    0.91579737,
                    0.76100516,
                    0.75650454,
                    0.90034449,
                    0.7837557,
                    0.76311272,
                    0.65992069,
                    0.82984259,
                    0.66892978,
                    0.81322885,
                    0.72463286,
                    0.65286548,
                    0.67839224,
                    0.62995702,
                    0.59903894,
                    0.54639033,
                    0.62077624,
                    0.61419547,
                    0.51074291,
                    0.53025854,
                    0.46080276,
                    0.52653935,
                    0.44396429,
                    0.45483244,
                    0.45972329,
                    0.41916582,
                    0.41387129,
                    0.31128551,
                    0.34508345,
                    0.2712639,
                    0.26905523,
                    0.19672207,
                    0.13844191,
                    0.20463591,
                    0.1699003,
                    0.1159273,
                    0.05837761,
                    0.04936885,
                    -0.03946738,
                    0.00955382,
                    -0.10106858,
                    -0.02402614,
                    -0.10845077,
                    -0.12569383,
                    -0.15760898,
                    -0.19692076,
                    -0.17364535,
                    -0.40350084,
                    -0.32167804,
                    -0.37054969,
                    -0.39506289,
                    -0.45116084,
                    -0.51358972,
                    -0.33357088,
                    -0.50232208,
                    -0.53072137,
                    -0.5878564,
                    -0.61747152,
                    -0.60075804,
                    -0.69849806,
                    -0.78306614,
                    -0.70974011,
                    -0.7410421,
                    -0.73231338,
                    -0.72861103,
                    -0.7577651,
                    -0.8105907,
                    -0.89046777,
                    -0.9769204,
                    -0.88654968,
                    -0.90654929,
                    -0.92621724,
                    -1.0463725,
                    -0.91339577,
                    -1.03855146,
                    -1.04980302,
                    -0.95444369,
                    -1.11106959,
                    -1.01130491,
                    -1.11896682,
                    -1.10037007,
                    -1.0488544,
                    -1.12333075,
                    -1.09755623,
                ],
                [
                    -1.22379606,
                    -1.5005257,
                    -1.36919681,
                    -1.32358545,
                    -1.23537564,
                    -1.06683199,
                    -1.0396514,
                    -1.24007395,
                    -1.2011,
                    -1.03995647,
                    -1.03049317,
                    -0.84608495,
                    -0.64033101,
                    -0.62696699,
                    -0.82052765,
                    -0.82767018,
                    -0.67966257,
                    -0.53207151,
                    -0.50918122,
                    -0.36745084,
                    -0.41072785,
                    -0.29956626,
                    -0.21480504,
                    -0.28045761,
                    -0.25500743,
                    -0.08873366,
                    0.27036744,
                    0.11609335,
                    0.04178451,
                    0.07834986,
                    0.35691254,
                    0.37041921,
                    0.29756736,
                    0.40395952,
                    0.35867788,
                    0.42073878,
                    0.58947794,
                    0.57936077,
                    0.51487315,
                    0.53355408,
                    0.72529655,
                    0.90579981,
                    0.72287217,
                    0.50427496,
                    0.9093096,
                    0.74698167,
                    0.65495016,
                    0.86429778,
                    0.85134038,
                    0.5170988,
                    0.82719539,
                    0.84899349,
                    0.91189429,
                    0.8022602,
                    0.74139894,
                    0.88598604,
                    0.839354,
                    0.75293912,
                    0.86045112,
                    0.7839012,
                    0.69686922,
                    0.64130785,
                    0.66549534,
                    0.57660207,
                    0.36706394,
                    0.43936121,
                    0.36866794,
                    0.31954009,
                    0.41170407,
                    0.17550008,
                    0.44489221,
                    0.17709158,
                    0.24972293,
                    -0.04478142,
                    0.02861825,
                    0.09660457,
                    0.23676013,
                    -0.09999611,
                    0.03534284,
                    -0.10087996,
                    -0.17699753,
                    -0.22698484,
                    -0.22132447,
                    -0.4463682,
                    -0.30480609,
                    -0.46363266,
                    -0.43718925,
                    -0.60734265,
                    -0.66531196,
                    -0.6243196,
                    -0.92715049,
                    -0.89256312,
                    -0.72021433,
                    -0.8366904,
                    -0.93637245,
                    -1.0803811,
                    -1.31916688,
                    -1.14228033,
                    -1.16805141,
                    -1.26437853,
                    -1.30015293,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[0].values),
            np.abs(expected_eigenfunctions_0),
            decimal=0,
        )

        expected_eigenfunctions_1 = np.array(
            [
                [
                    -0.41632316,
                    -0.4262231,
                    -0.43661133,
                    -0.44704299,
                    -0.45752962,
                    -0.46792443,
                    -0.47822333,
                    -0.48848242,
                    -0.49862441,
                    -0.50873078,
                    -0.51881553,
                    -0.52878046,
                    -0.53863988,
                    -0.54843867,
                    -0.55813129,
                    -0.5676445,
                    -0.57710264,
                    -0.58643055,
                    -0.59566369,
                    -0.60478424,
                    -0.61378254,
                    -0.62261694,
                    -0.63128987,
                    -0.63984797,
                    -0.64825338,
                    -0.65646276,
                    -0.66454281,
                    -0.67244494,
                    -0.68018718,
                    -0.68775396,
                    -0.69510316,
                    -0.70230868,
                    -0.70926532,
                    -0.71606849,
                    -0.72261494,
                    -0.72898149,
                    -0.73514365,
                    -0.74107894,
                    -0.74683948,
                    -0.7523099,
                    -0.7574933,
                    -0.76243551,
                    -0.76717874,
                    -0.77169307,
                    -0.77598043,
                    -0.77993764,
                    -0.78360754,
                    -0.78701887,
                    -0.79017346,
                    -0.79300681,
                    -0.79554518,
                    -0.79782012,
                    -0.79988879,
                    -0.80156775,
                    -0.80294948,
                    -0.80411964,
                    -0.8049559,
                    -0.80553529,
                    -0.80584352,
                    -0.80591384,
                    -0.80573863,
                    -0.80526182,
                    -0.80448736,
                    -0.80351845,
                    -0.80234896,
                    -0.80092949,
                    -0.79923928,
                    -0.79727861,
                    -0.79516228,
                    -0.7927944,
                    -0.79022927,
                    -0.78741365,
                    -0.78438759,
                    -0.78115841,
                    -0.77774652,
                    -0.77409764,
                    -0.77029997,
                    -0.7662688,
                    -0.76208163,
                    -0.75768001,
                    -0.75307866,
                    -0.74830962,
                    -0.74338939,
                    -0.73835122,
                    -0.73309674,
                    -0.72769723,
                    -0.72209502,
                    -0.71644632,
                    -0.71058341,
                    -0.70450934,
                    -0.69839461,
                    -0.69214393,
                    -0.68574244,
                    -0.67917485,
                    -0.67262248,
                    -0.66581879,
                    -0.65884051,
                    -0.65182315,
                    -0.6447823,
                    -0.63770403,
                    -0.63174862,
                ],
                [
                    0.97747803,
                    0.97542177,
                    0.97332593,
                    0.97075684,
                    0.967464,
                    0.9633576,
                    0.95859576,
                    0.95309211,
                    0.94679334,
                    0.93988265,
                    0.93234889,
                    0.9241313,
                    0.9151754,
                    0.90552631,
                    0.89522273,
                    0.88428051,
                    0.87271605,
                    0.86047621,
                    0.84766146,
                    0.83419439,
                    0.82012037,
                    0.80534819,
                    0.79005702,
                    0.77418767,
                    0.75777647,
                    0.74064961,
                    0.72297798,
                    0.70473733,
                    0.6860429,
                    0.66670577,
                    0.64681816,
                    0.62644713,
                    0.60542642,
                    0.58401468,
                    0.56193352,
                    0.53937414,
                    0.51645048,
                    0.49294437,
                    0.46897092,
                    0.44448841,
                    0.41959329,
                    0.39416885,
                    0.36839817,
                    0.34196708,
                    0.31515194,
                    0.28791659,
                    0.26021993,
                    0.23211217,
                    0.20376789,
                    0.17485925,
                    0.14553326,
                    0.11586664,
                    0.0855677,
                    0.05520988,
                    0.02458773,
                    -0.00649398,
                    -0.03761609,
                    -0.06910267,
                    -0.10059022,
                    -0.13208389,
                    -0.16375389,
                    -0.19547198,
                    -0.22708239,
                    -0.25870415,
                    -0.29032174,
                    -0.32181296,
                    -0.35314483,
                    -0.38427468,
                    -0.41516508,
                    -0.4457141,
                    -0.47612805,
                    -0.50613195,
                    -0.53577989,
                    -0.56496122,
                    -0.59372936,
                    -0.62199181,
                    -0.64980398,
                    -0.67702722,
                    -0.70362624,
                    -0.72968101,
                    -0.75499495,
                    -0.77960573,
                    -0.80347782,
                    -0.82671751,
                    -0.84900396,
                    -0.87047288,
                    -0.89095984,
                    -0.91060142,
                    -0.92928078,
                    -0.9469709,
                    -0.9637133,
                    -0.97943763,
                    -0.99387792,
                    -1.00729339,
                    -1.01936731,
                    -1.03014957,
                    -1.04006976,
                    -1.04862592,
                    -1.05586086,
                    -1.06152696,
                    -1.06727125,
                ],
                [
                    -1.38552936,
                    -1.35290423,
                    -1.31740404,
                    -1.27775329,
                    -1.23625862,
                    -1.19269662,
                    -1.14711716,
                    -1.09954635,
                    -1.05058878,
                    -0.99987514,
                    -0.94792229,
                    -0.89448158,
                    -0.83986008,
                    -0.78428738,
                    -0.72763383,
                    -0.67025586,
                    -0.61238143,
                    -0.55384387,
                    -0.49478698,
                    -0.43569008,
                    -0.37628705,
                    -0.31692278,
                    -0.25760424,
                    -0.19854757,
                    -0.13970809,
                    -0.08159038,
                    -0.02390009,
                    0.03298071,
                    0.0890902,
                    0.14407314,
                    0.19793458,
                    0.25068661,
                    0.30184652,
                    0.3517563,
                    0.3997612,
                    0.44620153,
                    0.49064796,
                    0.53300788,
                    0.57349341,
                    0.61154585,
                    0.64715907,
                    0.6802812,
                    0.71074556,
                    0.73855688,
                    0.76335314,
                    0.78506053,
                    0.80364653,
                    0.81883515,
                    0.8308633,
                    0.83874576,
                    0.84329092,
                    0.84438407,
                    0.84137301,
                    0.835302,
                    0.82538331,
                    0.81254623,
                    0.79634012,
                    0.77684811,
                    0.75450572,
                    0.72966885,
                    0.70193023,
                    0.67136651,
                    0.63849213,
                    0.60346485,
                    0.56607821,
                    0.52672261,
                    0.48543899,
                    0.44199687,
                    0.39704505,
                    0.35083985,
                    0.30296104,
                    0.25367426,
                    0.20309714,
                    0.151594,
                    0.09894668,
                    0.04548443,
                    -0.00863528,
                    -0.06332534,
                    -0.11855742,
                    -0.17404237,
                    -0.22992251,
                    -0.28585663,
                    -0.34168541,
                    -0.39728015,
                    -0.45283359,
                    -0.50814777,
                    -0.56266257,
                    -0.61640475,
                    -0.66957938,
                    -0.72185473,
                    -0.77317638,
                    -0.82339558,
                    -0.8723002,
                    -0.91979632,
                    -0.96567332,
                    -1.00995388,
                    -1.05297753,
                    -1.09350256,
                    -1.13241737,
                    -1.16941561,
                    -1.19582415,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[1].values),
            np.abs(expected_eigenfunctions_1),
            decimal=0,
        )

        expected_eigenvectors = np.array(
            [
                [-5.37366336e-02, -1.10068010e-01, 1.03716472e-01],
                [2.99430180e-02, 6.09565943e-03, 8.97108712e-03],
                [-8.71187936e-02, -1.36480953e-02, -1.15622787e-01],
                [2.92647161e-02, -4.81549793e-02, -1.09679325e-01],
                [-6.33413528e-02, -1.76446999e-02, 1.35319276e-01],
                [-6.79325396e-02, 1.03217630e-02, -3.54515567e-02],
                [8.57623785e-02, 3.21626304e-02, -2.39535674e-02],
                [1.03079095e-01, 4.33971910e-02, -2.66852894e-02],
                [1.99148247e-02, 2.36691454e-02, -1.05929433e-01],
                [-7.97384217e-02, 3.40394475e-02, -9.04704601e-02],
                [1.11908313e-01, 5.41863483e-02, -1.34087899e-01],
                [-6.87877054e-02, 5.60025747e-02, 1.49587933e-01],
                [-2.10076488e-02, -8.11080918e-02, 3.38233052e-02],
                [1.31257485e-02, -7.95324225e-02, -5.97902717e-02],
                [9.93147790e-02, -1.58908109e-01, 1.64683277e-02],
                [-2.29778697e-02, -6.45303443e-02, 2.50198710e-05],
                [7.22397342e-02, -1.14129691e-02, 3.31147037e-02],
                [-6.83043528e-03, -7.48345418e-02, -6.98891611e-03],
                [4.64156717e-02, 2.25124521e-02, -3.12558934e-03],
                [1.15994327e-01, -1.56013775e-01, 3.57497092e-02],
                [-4.94482595e-02, 5.54253107e-02, -1.26312823e-01],
                [3.25410779e-02, -1.20549447e-01, 2.57126856e-02],
                [1.00230478e-01, 1.15073848e-01, 6.48769988e-03],
                [-7.78673815e-02, -8.93216974e-02, -8.93710096e-02],
                [-8.53557015e-02, -9.28391024e-02, -5.20950792e-02],
                [6.96735327e-02, 1.50123065e-01, -1.56493116e-01],
                [1.69108853e-02, -6.68942310e-02, 1.66860294e-01],
                [-1.73098580e-01, -1.36878608e-01, -9.32224167e-02],
                [1.99665262e-01, -1.24932520e-01, -9.28740678e-02],
                [-1.35620644e-02, -1.24495856e-01, -5.13443373e-03],
                [1.89372199e-01, -7.39051466e-02, -1.57550762e-02],
                [-5.99033756e-02, 8.74664962e-02, 5.30070013e-02],
                [-1.04353243e-01, 2.14581700e-02, 2.31215652e-01],
                [-4.99914716e-02, 8.65484311e-02, -2.92979461e-02],
                [8.00128915e-02, 1.21085629e-01, 1.50669957e-02],
                [-6.53272286e-02, 1.35090651e-01, -1.08938471e-01],
                [-3.15550495e-02, -6.31691476e-02, -1.36152196e-01],
                [1.41100022e-01, 8.81684013e-02, -8.98784115e-02],
                [-2.46339309e-02, -9.91967147e-02, -9.21820637e-02],
                [1.14601622e-02, 4.13751427e-02, -5.61205611e-02],
                [-8.05896259e-02, 9.64208940e-02, -8.35801135e-02],
                [1.68352323e-01, -2.06133198e-02, 2.16476947e-02],
                [7.02056159e-02, -5.02618803e-02, 1.11312476e-01],
                [-1.17572581e-01, 8.98339377e-02, 4.73477405e-02],
                [2.92340187e-02, 1.02060090e-01, 3.96201238e-02],
                [-2.02916028e-01, 2.97246112e-01, -1.30938815e-02],
                [-4.90850341e-02, -1.30710187e-01, 3.69047049e-02],
                [1.39373626e-01, -9.69624956e-02, 2.11039270e-01],
                [2.01304566e-01, 4.37887265e-02, -6.39709940e-02],
                [-2.22159553e-01, -2.54348437e-01, 9.75350349e-02],
                [-1.04094061e-01, 1.30802532e-01, 1.49499640e-01],
                [2.23064072e-02, 5.83570716e-02, -4.00641996e-02],
                [1.30809463e-02, 1.94336487e-02, 4.74313577e-02],
                [-4.22226732e-02, 3.48024663e-02, 7.20907272e-05],
                [-9.66496603e-02, -1.40541376e-01, -1.46980119e-01],
                [6.21039187e-02, -1.61295092e-01, -8.14404696e-02],
                [-2.68785132e-02, -1.41881731e-01, 1.70480563e-01],
                [3.62276716e-04, 3.98003385e-02, 3.35027506e-03],
                [-9.93807679e-03, 2.13678580e-01, 1.95285180e-01],
                [9.41232327e-02, 1.43689598e-01, 2.12018611e-02],
                [7.88062057e-04, -6.34426226e-02, 1.55678247e-01],
                [-1.18074629e-01, -7.23008757e-02, 7.50212242e-02],
                [-1.78214129e-01, 3.91463083e-02, 2.21798334e-02],
                [1.60832804e-02, -7.06263512e-02, -8.08984512e-02],
                [-1.27390659e-01, -6.08225549e-02, -2.77510524e-03],
                [1.13392948e-01, -3.25584343e-02, 1.44487542e-01],
                [7.35754629e-02, 1.23886195e-01, -8.73167241e-02],
                [-4.88853893e-02, -1.39846835e-01, 2.31190251e-02],
                [-3.11056835e-02, -4.05525084e-02, -2.13899980e-02],
                [4.69731646e-02, 3.81591482e-02, 1.66070346e-01],
                [-2.41828224e-02, -1.30190631e-03, -1.63854700e-01],
                [1.18537405e-02, 8.83003806e-02, 3.82522585e-02],
                [-4.51507088e-02, 1.22543658e-01, 9.21653377e-02],
                [7.96579419e-02, -8.13864133e-02, -5.73594202e-02],
                [-1.56287243e-01, 5.46900400e-02, -9.43897706e-02],
                [9.09225565e-02, -1.30054575e-01, -2.32224054e-01],
                [1.39204450e-01, 1.76982074e-01, -1.38346581e-01],
                [-6.13357490e-02, 3.52937628e-02, 2.40862439e-02],
                [1.62041760e-02, -5.82780186e-02, -2.26278038e-02],
                [-6.75676973e-02, 3.85687802e-02, -4.98366611e-02],
                [-5.40395064e-02, 5.30433415e-02, 6.03218178e-02],
                [3.21706166e-02, 1.57846367e-01, 1.73670410e-01],
                [1.12058509e-01, -2.49835039e-01, 1.10894422e-01],
                [-1.45368988e-01, 1.10743901e-01, -1.39076169e-02],
                [1.44169684e-01, 3.69493585e-02, 1.13048587e-01],
                [-1.03558650e-01, 1.74432578e-01, 1.16013865e-01],
                [7.59846200e-02, 1.46855365e-01, 5.16249226e-02],
                [1.35933584e-01, -2.84328243e-02, -1.00478559e-02],
                [-9.41131454e-02, -5.89283150e-02, -5.70574525e-02],
                [-5.67873382e-02, -1.48330283e-02, -1.34409636e-01],
                [-2.60030071e-01, -8.00387304e-02, 1.15192063e-02],
                [1.23780226e-02, 5.26042954e-02, -1.65409956e-01],
                [2.55263922e-01, 6.32494988e-02, 6.11650905e-02],
                [-1.86252709e-01, -5.86382381e-02, 1.15892664e-01],
                [2.89950209e-02, -4.59698140e-02, -1.86344522e-02],
                [4.40842258e-02, 4.02695237e-02, -1.82229410e-01],
                [-8.55352778e-02, 7.46239706e-02, -1.23286992e-01],
                [3.23682032e-02, -1.08272114e-03, 1.07643122e-01],
                [-1.25041654e-02, 5.57796135e-04, -8.16597768e-02],
                [1.85380752e-01, 1.13223333e-02, 1.93906562e-01],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["_eigenvectors"]), np.abs(expected_eigenvectors), decimal=2
        )

    def test_fit_inner_product_with_2d(self):
        points = [
            DenseArgvals({"input_dim_0": np.linspace(0, 1, 21)}),
            DenseArgvals(
                {
                    "input_dim_0": np.linspace(0, 1, 11),
                    "input_dim_1": np.linspace(0, 1, 11),
                }
            ),
        ]
        results = _fit_inner_product_multivariate(
            data=self.fdata_multi_2d, points=points, n_components=0.7
        )

        expected_eigenvalues = np.array([0.39843819, 0.10945757])
        np.testing.assert_array_almost_equal(
            results["eigenvalues"], expected_eigenvalues
        )

        expected_eigenfunctions = np.array(
            [
                [
                    -0.60359855,
                    -0.56071358,
                    -0.57384996,
                    -0.53312444,
                    -0.59028273,
                    -0.65869498,
                    -0.64293172,
                    -0.6276641,
                    -0.69793554,
                    -0.63293816,
                    -0.64419754,
                    -0.75153038,
                    -0.64977505,
                    -0.74498778,
                    -0.72199906,
                    -0.68795989,
                    -0.77116569,
                    -0.77983857,
                    -0.8457322,
                    -0.76755907,
                    -0.80075906,
                    -0.7638787,
                    -0.80122887,
                    -0.82306063,
                    -0.81203884,
                    -0.88652253,
                    -0.8140911,
                    -0.90371326,
                    -0.92887796,
                    -0.92784922,
                    -0.94880707,
                    -0.8594172,
                    -0.92226571,
                    -0.92894444,
                    -0.9818904,
                    -0.97424943,
                    -0.88981841,
                    -0.97687749,
                    -1.00155828,
                    -0.94272516,
                    -1.0157793,
                    -0.99711163,
                    -0.99295689,
                    -1.02079783,
                    -1.13289784,
                    -1.01902818,
                    -1.00706016,
                    -0.95646838,
                    -1.00910717,
                    -1.05087546,
                    -1.05932229,
                    -1.04144261,
                    -1.10061715,
                    -1.02916962,
                    -1.04357621,
                    -1.09912944,
                    -1.11562426,
                    -1.0639463,
                    -1.10129225,
                    -1.12586128,
                    -1.14728043,
                    -1.0469118,
                    -1.08060363,
                    -1.04345606,
                    -1.10445881,
                    -1.07237617,
                    -1.061478,
                    -1.09119519,
                    -1.11979758,
                    -1.09685558,
                    -1.05097197,
                    -1.07534488,
                    -1.05771003,
                    -0.99409246,
                    -1.14266548,
                    -1.05210347,
                    -1.05250346,
                    -1.11486926,
                    -1.07110143,
                    -1.05936081,
                    -1.00968366,
                    -0.99243267,
                    -0.99284381,
                    -1.08228465,
                    -1.05720767,
                    -0.98065709,
                    -0.99206383,
                    -1.02540334,
                    -0.93527579,
                    -1.0067623,
                    -0.97128204,
                    -0.95328805,
                    -1.02618378,
                    -0.9853314,
                    -0.98280456,
                    -0.90772796,
                    -0.93361971,
                    -0.9328489,
                    -0.91318295,
                    -0.87777782,
                    -0.9160612,
                ],
                [
                    -1.34270882,
                    -1.46455996,
                    -1.35364731,
                    -1.22066138,
                    -1.2483532,
                    -1.31428767,
                    -1.20768635,
                    -1.31367065,
                    -1.21433959,
                    -1.12581287,
                    -1.25240653,
                    -1.31768243,
                    -1.29701736,
                    -1.22528525,
                    -1.19991474,
                    -1.25227267,
                    -1.17077139,
                    -1.27397528,
                    -1.0831281,
                    -1.07261201,
                    -1.26992126,
                    -1.10217547,
                    -1.09808244,
                    -0.95331572,
                    -1.1804289,
                    -0.99058664,
                    -1.18647365,
                    -1.06870536,
                    -0.97384078,
                    -1.01032346,
                    -0.96658408,
                    -0.9176198,
                    -0.84789221,
                    -0.94762935,
                    -0.94982788,
                    -0.81298751,
                    -0.83391861,
                    -0.75357872,
                    -0.84581786,
                    -0.73865576,
                    -0.76359372,
                    -0.7798599,
                    -0.71062389,
                    -0.69673902,
                    -0.60036415,
                    -0.6161189,
                    -0.51809162,
                    -0.5211065,
                    -0.42037386,
                    -0.33461722,
                    -0.45237379,
                    -0.40095017,
                    -0.32911914,
                    -0.23877792,
                    -0.23528965,
                    -0.12836748,
                    -0.18315394,
                    -0.03298497,
                    -0.14516405,
                    -0.03468349,
                    -0.00270008,
                    0.05478533,
                    0.0891726,
                    0.07764196,
                    0.38391009,
                    0.27898195,
                    0.34873998,
                    0.37529515,
                    0.4445685,
                    0.53776326,
                    0.28985563,
                    0.52671838,
                    0.5608216,
                    0.66054318,
                    0.68596707,
                    0.66244252,
                    0.79564345,
                    0.91541137,
                    0.81079202,
                    0.86848135,
                    0.86684311,
                    0.85792439,
                    0.89706894,
                    0.97192629,
                    1.0726524,
                    1.20538491,
                    1.08931696,
                    1.12373591,
                    1.15965573,
                    1.31045352,
                    1.16067513,
                    1.32342482,
                    1.31963463,
                    1.19865733,
                    1.42464877,
                    1.30744632,
                    1.45748534,
                    1.42788239,
                    1.36213853,
                    1.47384645,
                    1.43639615,
                ],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[0].values),
            np.abs(expected_eigenfunctions),
            decimal=1,
        )

        expected_eigenfunctions = np.array(
            [
                -0.62174962,
                -0.6638845,
                -0.69073084,
                -0.66098591,
                -0.67557954,
                -0.70327655,
                -0.67061965,
                -0.73060272,
                -0.7863247,
                -0.74859493,
                -0.70387392,
                -0.72252177,
                -0.71599366,
                -0.76405848,
                -0.70499139,
                -0.75028043,
                -0.7616354,
                -0.81158773,
                -0.68054997,
                -0.75100891,
                -0.72218241,
                -0.72709132,
                -0.76575806,
                -0.82878853,
                -0.81953311,
                -0.77119733,
                -0.71966599,
                -0.71019258,
                -0.7620828,
                -0.72964741,
                -0.77944531,
                -0.73132429,
                -0.69222689,
                -0.71389674,
                -0.71200213,
                -0.74546627,
                -0.67923804,
                -0.71194471,
                -0.61643874,
                -0.68559147,
                -0.68001892,
                -0.73091653,
                -0.67481527,
                -0.70378491,
                -0.68429161,
                -0.61504405,
                -0.65928617,
                -0.71315409,
                -0.65153015,
                -0.64936471,
                -0.61890955,
                -0.60130322,
                -0.57867765,
                -0.65522534,
                -0.57644506,
                -0.49939801,
                -0.61682437,
                -0.58231211,
                -0.58956359,
                -0.56327023,
                -0.52899102,
                -0.51211684,
                -0.55893582,
                -0.53598595,
                -0.4761031,
                -0.50963337,
                -0.44954881,
                -0.40846682,
                -0.5302256,
                -0.39783014,
                -0.39997404,
                -0.3652406,
                -0.46639147,
                -0.41031222,
                -0.35091089,
                -0.32848633,
                -0.31364355,
                -0.38522602,
                -0.25977451,
                -0.34666557,
                -0.30227549,
                -0.27441793,
                -0.26537515,
                -0.22320711,
                -0.25061337,
                -0.26705992,
                -0.21531996,
                -0.1847439,
                -0.24154936,
                -0.23316056,
                -0.18859671,
                -0.14988665,
                -0.24110899,
                -0.21948329,
                -0.16967098,
                -0.09937503,
                -0.11154308,
                -0.14707426,
                -0.1457705,
                -0.14640254,
                -0.06442213,
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["eigenfunctions"].data[1].values[0, 0]),
            np.abs(expected_eigenfunctions),
            decimal=1,
        )

        expected_eigenvectors = np.array(
            [
                [-4.76895401e-02, 8.81107451e-02],
                [3.56442717e-02, -8.59718881e-03],
                [-9.25139056e-02, 2.17501174e-02],
                [2.64742125e-02, 5.54162637e-02],
                [-6.05669827e-02, 7.20677298e-05],
                [-7.03478548e-02, -7.23520827e-03],
                [8.31628807e-02, -2.24057258e-02],
                [1.00344048e-01, -3.30693154e-02],
                [1.72565546e-02, -1.40698748e-02],
                [-7.92789736e-02, -3.63470990e-02],
                [1.16912315e-01, -3.49958769e-02],
                [-6.54289621e-02, -7.01892606e-02],
                [-2.59708067e-02, 7.89395896e-02],
                [8.98464356e-03, 8.06095169e-02],
                [9.17375663e-02, 1.71886422e-01],
                [-2.46818798e-02, 6.20184246e-02],
                [7.51698229e-02, 5.19819925e-03],
                [-1.38614835e-02, 8.17470160e-02],
                [5.48135798e-02, -3.23913302e-02],
                [1.09730376e-01, 1.58781342e-01],
                [-4.56008447e-02, -5.47697300e-02],
                [3.38024139e-02, 1.10184739e-01],
                [1.04040903e-01, -1.07886124e-01],
                [-8.26709383e-02, 8.63211585e-02],
                [-9.61999053e-02, 9.51470586e-02],
                [7.78071761e-02, -1.34101950e-01],
                [2.19615218e-02, 4.52861961e-02],
                [-1.94664781e-01, 1.46426079e-01],
                [1.95488127e-01, 1.45943938e-01],
                [-2.30226063e-02, 1.20643986e-01],
                [1.79622280e-01, 8.48032403e-02],
                [-4.85630513e-02, -9.79601398e-02],
                [-1.01601799e-01, -4.16629041e-02],
                [-4.11003813e-02, -8.61864170e-02],
                [9.21222345e-02, -1.21912311e-01],
                [-5.96442615e-02, -1.27068417e-01],
                [-4.22947745e-02, 7.63582550e-02],
                [1.34358298e-01, -6.35071312e-02],
                [-2.54784663e-02, 1.03815667e-01],
                [1.36181570e-02, -3.70351526e-02],
                [-6.70252550e-02, -1.06253395e-01],
                [1.67082835e-01, 2.80347038e-02],
                [7.15135741e-02, 3.93419011e-02],
                [-1.07372328e-01, -1.00908612e-01],
                [3.70483476e-02, -1.04321472e-01],
                [-1.83471072e-01, -3.08487148e-01],
                [-5.16531890e-02, 1.21620768e-01],
                [1.35083084e-01, 8.57388057e-02],
                [1.89605503e-01, -1.94565219e-02],
                [-2.25422099e-01, 2.24476007e-01],
                [-9.29508411e-02, -1.52677139e-01],
                [2.96560722e-02, -5.87127701e-02],
                [1.02633736e-02, -2.26340524e-02],
                [-4.48443721e-02, -4.57909553e-02],
                [-1.11475527e-01, 1.51041174e-01],
                [4.87756617e-02, 1.73533230e-01],
                [-2.79817450e-02, 1.23716511e-01],
                [2.26929386e-03, -3.93853607e-02],
                [4.20054401e-03, -2.27100821e-01],
                [9.89513928e-02, -1.39553708e-01],
                [-9.17859626e-05, 4.93328887e-02],
                [-1.27155611e-01, 6.89697172e-02],
                [-1.77973867e-01, -4.99944979e-02],
                [1.70577525e-02, 7.72479574e-02],
                [-1.39543818e-01, 6.30620659e-02],
                [1.12777662e-01, 2.70247971e-02],
                [7.78092738e-02, -1.11102711e-01],
                [-5.86989500e-02, 1.34635411e-01],
                [-3.79290383e-02, 5.15216788e-02],
                [4.62474778e-02, -3.61065607e-02],
                [-3.12386263e-02, 1.57798176e-02],
                [2.01173131e-02, -8.88735711e-02],
                [-3.61181293e-02, -1.31685821e-01],
                [7.00714334e-02, 9.60407768e-02],
                [-1.56890570e-01, -5.27228974e-02],
                [7.86057491e-02, 1.46462308e-01],
                [1.52786545e-01, -1.59676600e-01],
                [-5.13577432e-02, -4.82380108e-02],
                [7.16993225e-03, 6.15914141e-02],
                [-6.34434725e-02, -4.32096707e-02],
                [-5.12824076e-02, -5.79320980e-02],
                [4.92985300e-02, -1.75324324e-01],
                [9.98493597e-02, 2.40009819e-01],
                [-1.43741307e-01, -1.17042306e-01],
                [1.47900076e-01, -3.86179048e-02],
                [-9.16460811e-02, -1.78757563e-01],
                [8.20661533e-02, -1.39399032e-01],
                [1.32393910e-01, 4.54136256e-02],
                [-9.43419773e-02, 5.82986124e-02],
                [-5.90399319e-02, 2.52023654e-02],
                [-2.64421358e-01, 5.82495812e-02],
                [1.19114498e-02, -4.04334999e-02],
                [2.64897768e-01, -5.10368139e-02],
                [-1.82044909e-01, 3.15451044e-02],
                [2.35611035e-02, 4.89753540e-02],
                [3.10439823e-02, -1.15883621e-02],
                [-8.29318981e-02, -6.65546654e-02],
                [3.14234379e-02, -1.44847909e-03],
                [-1.34240854e-02, 8.46080247e-03],
                [1.93704946e-01, -2.00117795e-02],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(results["_eigenvectors"]), np.abs(expected_eigenvectors)
        )


class TestTransformNumericalIntegrationDense(unittest.TestCase):
    def setUp(self):
        warnings.simplefilter("ignore", category=UserWarning)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_noisy_5_10_001_2D.pickle"
        with open(fname, "rb") as handle:
            self.fdata_2D = pickle.load(handle)

    def test_numerical_integration(self):
        uf = UFPCA(n_components=2, method="covariance")
        uf.fit(self.fdata)
        uf_eigen = uf.eigenfunctions

        scores_dense = _transform_numerical_integration_dense(self.fdata, uf_eigen)
        expected_scores = np.array(
            [
                [-0.31407985, -0.34501462],
                [0.18590497, 0.01600659],
                [-0.5309567, -0.06397454],
                [0.18509793, -0.14591565],
                [-0.3906875, -0.06164046],
                [-0.42064091, 0.00905895],
                [0.51783446, 0.09620698],
                [0.6166628, 0.13757848],
                [0.10850666, 0.06626926],
                [-0.4836799, 0.11260329],
                [0.69048951, 0.15387777],
                [-0.40298866, 0.18130211],
                [-0.11425671, -0.25635519],
                [0.0863066, -0.24426325],
                [0.61030171, -0.53451067],
                [-0.13442997, -0.21374702],
                [0.42101685, -0.03232197],
                [-0.0449759, -0.26482438],
                [0.27920531, 0.08982375],
                [0.68212314, -0.51129384],
                [-0.31571269, 0.17226489],
                [0.19372728, -0.37763243],
                [0.59037582, 0.35463027],
                [-0.47219219, -0.27948513],
                [-0.52880655, -0.30739972],
                [0.40225087, 0.45051335],
                [0.09710117, -0.20476911],
                [-1.04709694, -0.45379092],
                [1.21548866, -0.41622462],
                [-0.09528199, -0.38970151],
                [1.10771212, -0.23617563],
                [-0.36130171, 0.25933414],
                [-0.62384406, 0.05893731],
                [-0.27705395, 0.26509915],
                [0.47330252, 0.37350707],
                [-0.3916666, 0.40841474],
                [-0.21355542, -0.22822442],
                [0.83936096, 0.26328543],
                [-0.13725391, -0.33313896],
                [0.06429007, 0.12375258],
                [-0.49019383, 0.30815238],
                [1.00665659, -0.06937239],
                [0.43483887, -0.14188766],
                [-0.7055437, 0.26380961],
                [0.19110321, 0.32817099],
                [-1.22472684, 0.92463595],
                [-0.29757608, -0.42331777],
                [0.81173652, -0.30851275],
                [1.19407199, 0.13952233],
                [-1.32139907, -0.80126999],
                [-0.63245639, 0.4179171],
                [0.12391726, 0.17394714],
                [0.05930911, 0.05929626],
                [-0.28473874, 0.12980858],
                [-0.57162567, -0.45267431],
                [0.36502724, -0.52348509],
                [-0.17098882, -0.46526312],
                [-0.00804526, 0.11241198],
                [-0.08118131, 0.65257462],
                [0.55474901, 0.45423654],
                [0.0112747, -0.19779418],
                [-0.7084218, -0.25041556],
                [-1.07100019, 0.1151542],
                [0.0993109, -0.24770217],
                [-0.77517807, -0.21883233],
                [0.66468488, -0.11397289],
                [0.43854962, 0.379085],
                [-0.29655405, -0.4411707],
                [-0.17369788, -0.15143741],
                [0.28660638, 0.09434322],
                [-0.14160027, -0.00807537],
                [0.08575574, 0.2682228],
                [-0.2754557, 0.37615841],
                [0.48567919, -0.27080925],
                [-0.95047595, 0.14999618],
                [0.53424038, -0.40328496],
                [0.82690056, 0.53408579],
                [-0.36762592, 0.11140998],
                [0.07373833, -0.18728293],
                [-0.41570492, 0.11738093],
                [-0.32020101, 0.15919131],
                [0.18845946, 0.49854516],
                [0.66809043, -0.77123568],
                [-0.86972882, 0.35542868],
                [0.84650429, 0.10756061],
                [-0.61901188, 0.50940848],
                [0.46496616, 0.45169037],
                [0.82287233, -0.1178215],
                [-0.55559742, -0.20322033],
                [-0.33357498, -0.06326232],
                [-1.57765983, -0.25059314],
                [0.06466516, 0.15830384],
                [1.5493422, 0.18281573],
                [-1.12306248, -0.18599134],
                [0.18092438, -0.13977693],
                [0.26178843, 0.11523417],
                [-0.5205394, 0.2099906],
                [0.19839583, -0.01264537],
                [-0.08419615, -0.02732295],
                [1.11041526, 0.02936957],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_dense), np.abs(expected_scores), decimal=3
        )

    def test_numerical_integration_2d(self):
        uf = UFPCA(n_components=2, method="inner-product")
        uf.fit(self.fdata_2D)

        scores = _transform_numerical_integration_dense(
            self.fdata_2D, uf.eigenfunctions
        )
        expected_scores = np.array(
            [
                [-0.00298337, 0.2994561],
                [0.13721902, 0.11530089],
                [-0.26955105, -0.01495127],
                [-0.0429005, 0.05426806],
                [-0.01650737, 0.04279912],
                [-0.13889972, -0.05524313],
                [0.11261249, -0.10590448],
                [0.1359452, -0.10132286],
                [-0.01216126, -0.00138323],
                [-0.15244151, 0.02926768],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores), np.abs(expected_scores), decimal=3
        )


class TestTransformNumericalIntegrationIrregular(unittest.TestCase):
    def setUp(self):
        warnings.simplefilter("ignore", category=UserWarning)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

    def test_numerical_integration(self):
        uf = UFPCA(n_components=0.95, method="covariance")
        uf.fit(self.fdata_sparse, method_smoothing="PS")
        uf_eigen = uf.eigenfunctions

        scores_sparse = _transform_numerical_integration_irregular(
            self.fdata_sparse, uf_eigen
        )
        expected_scores = np.array(
            [
                [0.33553103, 0.35750152],
                [-0.16274744, -0.00782038],
                [0.51841011, 0.04182627],
                [-0.15723536, 0.17101378],
                [0.37594987, 0.06334272],
                [0.40052369, -0.03716813],
                [-0.49813827, -0.09163037],
                [-0.60615297, -0.12077191],
                [-0.12095971, -0.0644299],
                [0.47856624, -0.07982301],
                [-0.63793603, -0.16997758],
                [0.43053648, -0.15359642],
                [0.1448664, 0.26481174],
                [-0.06363514, 0.26824111],
                [-0.57046316, 0.46785532],
                [0.14795174, 0.20498991],
                [-0.43383481, 0.05134935],
                [0.04428897, 0.21745849],
                [-0.26666381, -0.0362119],
                [-0.69812588, 0.47241019],
                [0.28453176, -0.15375202],
                [-0.18859125, 0.38848235],
                [-0.59672923, -0.35136996],
                [0.46549567, 0.29751798],
                [0.49862925, 0.29066263],
                [-0.41984602, -0.46989963],
                [-0.09645947, 0.22426881],
                [1.02852174, 0.42242494],
                [-1.1651864, 0.37331998],
                [0.07331893, 0.40288057],
                [-1.1487562, 0.23381407],
                [0.36548114, -0.26944962],
                [0.63464918, -0.06086429],
                [0.33136343, -0.25733969],
                [-0.47180395, -0.36963038],
                [0.4002671, -0.41471825],
                [0.17049771, 0.18482372],
                [-0.83727826, -0.27478996],
                [0.16350168, 0.30412989],
                [-0.06317454, -0.11849491],
                [0.48306521, -0.27283656],
                [-0.99717806, 0.06818327],
                [-0.39596921, 0.18272367],
                [0.71077973, -0.27798013],
                [-0.14707544, -0.2950167],
                [1.21549291, -0.90681916],
                [0.29607323, 0.40830321],
                [-0.84610846, 0.30266884],
                [-1.20267933, -0.12465],
                [1.33920191, 0.80662566],
                [0.62421048, -0.38189138],
                [-0.13321386, -0.17436083],
                [-0.08742096, -0.04818656],
                [0.22921072, -0.07029625],
                [0.58958828, 0.44512857],
                [-0.37202408, 0.49757395],
                [0.15743539, 0.43283658],
                [-0.00252755, -0.12064115],
                [0.05190811, -0.66883972],
                [-0.55865901, -0.43063854],
                [0.0102581, 0.21066819],
                [0.7115646, 0.21793891],
                [1.06923593, -0.10800101],
                [-0.08572534, 0.20929601],
                [0.7557168, 0.17977761],
                [-0.68177333, 0.09766501],
                [-0.43029262, -0.37905252],
                [0.29451898, 0.44746075],
                [0.20690663, 0.11762395],
                [-0.26360786, -0.13408897],
                [0.15555093, 0.01927325],
                [-0.04493731, -0.26843984],
                [0.27615765, -0.37314157],
                [-0.45948736, 0.25054292],
                [0.92740442, -0.16883315],
                [-0.54804763, 0.42534779],
                [-0.82570343, -0.55656653],
                [0.37535339, -0.09150085],
                [-0.11197104, 0.19101849],
                [0.40122674, -0.10429079],
                [0.33624058, -0.15573043],
                [-0.18319196, -0.47501801],
                [-0.66652677, 0.79627179],
                [0.87914616, -0.3150299],
                [-0.86688042, -0.11468945],
                [0.63226848, -0.56244389],
                [-0.43097241, -0.45323261],
                [-0.79338054, 0.06978086],
                [0.57709313, 0.18408426],
                [0.35355833, 0.04888077],
                [1.53820393, 0.27285969],
                [-0.07428543, -0.15170254],
                [-1.49159627, -0.20622875],
                [1.11196062, 0.19937471],
                [-0.15769067, 0.16158982],
                [-0.25624267, -0.1191761],
                [0.51164769, -0.2346644],
                [-0.17873432, 0.005878],
                [0.07366294, -0.01341471],
                [-1.0955639, -0.03591437],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_sparse), np.abs(expected_scores), decimal=3
        )


class TestTransformNumericalIntegrationMultivariate(unittest.TestCase):
    def setUp(self):
        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

        fdata_uni = self.fdata
        fdata_sparse = self.fdata_sparse
        self.fdata = MultivariateFunctionalData([fdata_uni, fdata_sparse])

    def test_transform_numerical_integration_multivariate(self):
        mfpca = MFPCA(method="inner-product", n_components=0.7)
        mfpca.fit(data=self.fdata, method_smoothing="PS")
        scores = _transform_numerical_integration_multivariate(
            self.fdata, mfpca.eigenfunctions
        )

        expected_scores = np.array(
            [
                [-4.60908176e-01],
                [2.46899161e-01],
                [-7.43278004e-01],
                [2.41167050e-01],
                [-5.42155147e-01],
                [-5.80991830e-01],
                [7.19059603e-01],
                [8.65533895e-01],
                [1.62076621e-01],
                [-6.80848584e-01],
                [9.40215794e-01],
                [-5.88236791e-01],
                [-1.84070904e-01],
                [1.04654097e-01],
                [8.33694106e-01],
                [-2.00739224e-01],
                [6.04677284e-01],
                [-6.41499171e-02],
                [3.86241358e-01],
                [9.74779038e-01],
                [-4.24639499e-01],
                [2.68880032e-01],
                [8.41438173e-01],
                [-6.65025863e-01],
                [-7.28364303e-01],
                [5.82970236e-01],
                [1.36666101e-01],
                [-1.47055025e00],
                [1.68252050e00],
                [-1.21086323e-01],
                [1.59545580e00],
                [-5.13072956e-01],
                [-8.89057976e-01],
                [-4.29233540e-01],
                [6.70427057e-01],
                [-5.58950427e-01],
                [-2.73285672e-01],
                [1.18713694e00],
                [-2.14741728e-01],
                [9.05639089e-02],
                [-6.88049616e-01],
                [1.41765162e00],
                [5.87470433e-01],
                [-1.00087779e00],
                [2.40908067e-01],
                [-1.72276606e00],
                [-4.21557140e-01],
                [1.17253974e00],
                [1.69638423e00],
                [-1.88553549e00],
                [-8.86866589e-01],
                [1.82302041e-01],
                [1.04276349e-01],
                [-3.63568809e-01],
                [-8.23894008e-01],
                [5.18945197e-01],
                [-2.33731682e-01],
                [-3.31115897e-03],
                [-9.04319477e-02],
                [7.89803042e-01],
                [2.91665975e-04],
                [-1.00512346e00],
                [-1.51382048e00],
                [1.29670533e-01],
                [-1.08392753e00],
                [9.52778057e-01],
                [6.15970733e-01],
                [-4.19877670e-01],
                [-2.69479944e-01],
                [3.90955067e-01],
                [-2.10920141e-01],
                [9.38617505e-02],
                [-3.88280275e-01],
                [6.67425064e-01],
                [-1.32834696e00],
                [7.62706412e-01],
                [1.17110435e00],
                [-5.25189043e-01],
                [1.30689756e-01],
                [-5.77889788e-01],
                [-4.63474217e-01],
                [2.65745865e-01],
                [9.41487321e-01],
                [-1.23599586e00],
                [1.21310952e00],
                [-8.82337001e-01],
                [6.36350086e-01],
                [1.14344165e00],
                [-8.02439625e-01],
                [-4.86711480e-01],
                [-2.20587293e00],
                [9.83272677e-02],
                [2.15280717e00],
                [-1.58181418e00],
                [2.38883245e-01],
                [3.66522924e-01],
                [-7.29882803e-01],
                [2.67416696e-01],
                [-1.12143812e-01],
                [1.56169336e00],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores), np.abs(expected_scores), decimal=1
        )


class TestTransformPACE(unittest.TestCase):
    def setUp(self):
        warnings.simplefilter("ignore", category=UserWarning)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

        self.fdata_multi = MultivariateFunctionalData([self.fdata, self.fdata_sparse])

    def test_pace_dense(self):
        uf_dense = UFPCA(n_components=2, method="covariance")
        uf_dense.fit(self.fdata)

        scores_dense = _transform_pace_dense(
            self.fdata,
            uf_dense.eigenfunctions,
            uf_dense.eigenvalues,
            uf_dense.covariance,
            uf_dense._noise_variance,
        )
        expected_scores = np.array(
            [
                [-0.3126376, -0.34080899],
                [0.18666137, 0.01498733],
                [-0.53234452, -0.06497559],
                [0.18046832, -0.14811693],
                [-0.38630565, -0.06227865],
                [-0.4214148, 0.00846981],
                [0.51773574, 0.09561974],
                [0.61376943, 0.1333719],
                [0.108081, 0.0621383],
                [-0.48517043, 0.11199889],
                [0.68617689, 0.15352009],
                [-0.39697586, 0.18184287],
                [-0.11437756, -0.25616345],
                [0.08762441, -0.23784349],
                [0.60718432, -0.53188789],
                [-0.13406636, -0.21109427],
                [0.42153179, -0.03137218],
                [-0.04538766, -0.26317179],
                [0.27648865, 0.09212359],
                [0.68600805, -0.50853711],
                [-0.31655338, 0.17228334],
                [0.1937527, -0.37796318],
                [0.58996267, 0.34903981],
                [-0.47140243, -0.27889278],
                [-0.52820272, -0.3071656],
                [0.39831422, 0.44850162],
                [0.10195922, -0.20199357],
                [-1.04745707, -0.45328038],
                [1.21030891, -0.41630466],
                [-0.09569164, -0.38666507],
                [1.10394455, -0.23346219],
                [-0.36088539, 0.26047243],
                [-0.61995717, 0.06183844],
                [-0.27761368, 0.25973373],
                [0.47385796, 0.37358912],
                [-0.39276178, 0.40747447],
                [-0.21694879, -0.2235272],
                [0.83585367, 0.26319988],
                [-0.13768801, -0.32644545],
                [0.06327392, 0.11991731],
                [-0.49325965, 0.30636867],
                [1.00604443, -0.06947097],
                [0.4375263, -0.13888041],
                [-0.70165112, 0.26306913],
                [0.1936804, 0.32863214],
                [-1.22395985, 0.92119368],
                [-0.30011953, -0.42412453],
                [0.81290622, -0.30755749],
                [1.18875037, 0.13528191],
                [-1.31568122, -0.79520505],
                [-0.62916108, 0.41498666],
                [0.12384346, 0.17168378],
                [0.05897061, 0.05891094],
                [-0.28371605, 0.12563735],
                [-0.57359228, -0.45153584],
                [0.36001261, -0.52231417],
                [-0.16438843, -0.46170208],
                [-0.00841848, 0.11051958],
                [-0.07677715, 0.65144005],
                [0.55371992, 0.45276531],
                [0.01201649, -0.19936516],
                [-0.70728565, -0.24585705],
                [-1.07021915, 0.11134093],
                [0.09744183, -0.24551218],
                [-0.77656602, -0.21796339],
                [0.66581205, -0.11289102],
                [0.43605826, 0.37987231],
                [-0.29637063, -0.43983365],
                [-0.17512441, -0.15060052],
                [0.28837099, 0.09246677],
                [-0.14333203, -0.0129623],
                [0.08580747, 0.26962681],
                [-0.27280148, 0.37349661],
                [0.48300022, -0.27043155],
                [-0.95385506, 0.14805297],
                [0.53026768, -0.39865001],
                [0.82494385, 0.53346172],
                [-0.36535121, 0.11103261],
                [0.07473799, -0.18584888],
                [-0.41759927, 0.11427833],
                [-0.31753408, 0.15460923],
                [0.1911939, 0.49606863],
                [0.67045662, -0.76621509],
                [-0.87031095, 0.35379133],
                [0.84757669, 0.10898654],
                [-0.61478225, 0.50894368],
                [0.46449727, 0.44877823],
                [0.82285819, -0.11722889],
                [-0.55633851, -0.20164578],
                [-0.33524853, -0.0663639],
                [-1.57462516, -0.25182462],
                [0.0599598, 0.15793562],
                [1.54984566, 0.18138887],
                [-1.11902435, -0.18612385],
                [0.17961355, -0.14191761],
                [0.25631159, 0.11218633],
                [-0.5224096, 0.21157023],
                [0.20068479, -0.01550404],
                [-0.08781743, -0.02880724],
                [1.11366703, 0.02691845],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_dense), np.abs(expected_scores), decimal=3
        )

    def test_pace_irregular(self):
        uf_sparse = UFPCA(n_components=2, method="covariance")
        uf_sparse.fit(self.fdata_sparse, method_smoothing="PS")

        scores_sparse = _transform_pace_irregular(
            self.fdata_sparse,
            uf_sparse.eigenfunctions,
            uf_sparse.eigenvalues,
            uf_sparse.covariance,
            uf_sparse._noise_variance,
        )
        expected_scores = np.array(
            [
                [0.33281173, 0.35603895],
                [-0.16321285, -0.00746332],
                [0.52098871, 0.04113104],
                [-0.15492989, 0.17155225],
                [0.37258895, 0.06294905],
                [0.40109768, -0.03706251],
                [-0.49712056, -0.09211187],
                [-0.6046956, -0.12055715],
                [-0.11856704, -0.06465797],
                [0.48010601, -0.08031753],
                [-0.63511799, -0.16999809],
                [0.42743353, -0.15313661],
                [0.14420188, 0.26615113],
                [-0.06239364, 0.26766449],
                [-0.57073579, 0.4690686],
                [0.14780151, 0.20429376],
                [-0.434934, 0.05068259],
                [0.04449984, 0.21744104],
                [-0.26682979, -0.03747299],
                [-0.69925003, 0.47325043],
                [0.28675806, -0.15440897],
                [-0.18976647, 0.38765476],
                [-0.59636573, -0.35109442],
                [0.466705, 0.29724193],
                [0.49960146, 0.2913689],
                [-0.41682136, -0.47044675],
                [-0.10058865, 0.22371592],
                [1.03040684, 0.42401656],
                [-1.16316647, 0.37343031],
                [0.07345632, 0.40315117],
                [-1.14798997, 0.23477291],
                [0.36386395, -0.27150231],
                [0.62957762, -0.06014455],
                [0.33142619, -0.2570956],
                [-0.47251684, -0.36966209],
                [0.4023237, -0.41500186],
                [0.17320642, 0.18406072],
                [-0.83445908, -0.27401015],
                [0.16526729, 0.30221836],
                [-0.06219851, -0.11804246],
                [0.48434579, -0.27475051],
                [-0.99730577, 0.06880057],
                [-0.39796711, 0.18233353],
                [0.70934774, -0.27957218],
                [-0.14796433, -0.29467705],
                [1.21523262, -0.9081855],
                [0.2946386, 0.40854818],
                [-0.85028148, 0.30348244],
                [-1.20037802, -0.12183978],
                [1.33579269, 0.8055997],
                [0.62077797, -0.38224299],
                [-0.13256812, -0.17553401],
                [-0.08845483, -0.0476454],
                [0.22933069, -0.07093806],
                [0.59242896, 0.44601165],
                [-0.37004325, 0.49764745],
                [0.15351796, 0.43178852],
                [-0.00277967, -0.12041871],
                [0.04741046, -0.66875815],
                [-0.55887341, -0.43016611],
                [0.0073175, 0.20966759],
                [0.70997142, 0.21913388],
                [1.06845155, -0.10899921],
                [-0.08453798, 0.2087433],
                [0.75563377, 0.17985261],
                [-0.68471062, 0.09751645],
                [-0.42835363, -0.37960667],
                [0.29377082, 0.44831114],
                [0.207347, 0.11983344],
                [-0.266816, -0.13162926],
                [0.15900881, 0.01941689],
                [-0.04571758, -0.26861639],
                [0.27407121, -0.37329412],
                [-0.45780397, 0.25053934],
                [0.92885881, -0.16925904],
                [-0.54292504, 0.42399007],
                [-0.82322098, -0.55703828],
                [0.37413047, -0.09221707],
                [-0.11150031, 0.19290347],
                [0.4020736, -0.10504227],
                [0.33508541, -0.15552682],
                [-0.18718232, -0.47544117],
                [-0.66892487, 0.79752735],
                [0.8793302, -0.31497459],
                [-0.86872699, -0.11454713],
                [0.62953547, -0.5624054],
                [-0.43161966, -0.45171677],
                [-0.79297631, 0.07104097],
                [0.57774229, 0.1834873],
                [0.35591509, 0.04959799],
                [1.53720869, 0.27175697],
                [-0.07111699, -0.15182361],
                [-1.49235753, -0.20590764],
                [1.10869824, 0.19840699],
                [-0.15711257, 0.16189333],
                [-0.25178714, -0.11746616],
                [0.51401419, -0.23529374],
                [-0.18088482, 0.00660277],
                [0.07535068, -0.01435099],
                [-1.0995528, -0.03645102],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_sparse), np.abs(expected_scores), decimal=3
        )

    def test_pace_multivariate(self):
        univariate_expansions = [
            {"method": "UFPCA", "n_components": 15, "method_smoothing": "PS"},
            {"method": "UFPCA", "n_components": 15, "method_smoothing": "PS"},
        ]
        mfpca = MFPCA(
            n_components=2,
            method="covariance",
            univariate_expansions=univariate_expansions,
        )
        mfpca.fit(self.fdata_multi, method_smoothing="PS")

        scores_multi = _transform_pace_multivariate(
            mfpca._eigenvectors, mfpca._scores_univariate
        )
        expected_scores = np.array(
            [
                [4.55530750e-01, 4.73778394e-01],
                [-2.51200117e-01, -3.00203794e-02],
                [7.37038336e-01, 5.63335976e-02],
                [-2.45558284e-01, 2.09501046e-01],
                [5.36367091e-01, 7.25064736e-02],
                [5.75793971e-01, -4.81161542e-02],
                [-7.23285561e-01, -1.46097075e-01],
                [-8.66635774e-01, -1.93020739e-01],
                [-1.69120108e-01, -1.04646133e-01],
                [6.75643963e-01, -1.52614695e-01],
                [-9.42683781e-01, -2.40900079e-01],
                [5.82398546e-01, -2.52644519e-01],
                [1.79305097e-01, 3.50849819e-01],
                [-1.11683722e-01, 3.39884653e-01],
                [-8.34849498e-01, 6.91320549e-01],
                [1.95825855e-01, 2.77877714e-01],
                [-6.08058946e-01, 4.40581145e-02],
                [5.91084536e-02, 3.23929219e-01],
                [-3.88406790e-01, -1.05977224e-01],
                [-9.80479922e-01, 6.81641029e-01],
                [4.18223560e-01, -2.48291377e-01],
                [-2.74349755e-01, 5.25957424e-01],
                [-8.44009794e-01, -5.08915983e-01],
                [6.56605278e-01, 3.88477475e-01],
                [7.21631823e-01, 4.03906310e-01],
                [-5.86394347e-01, -6.67177554e-01],
                [-1.42171049e-01, 2.87282833e-01],
                [1.46377997e00, 5.99405888e-01],
                [-1.68376530e00, 5.44813118e-01],
                [1.16191643e-01, 5.40695410e-01],
                [-1.59639710e00, 3.20470435e-01],
                [5.08749994e-01, -3.92744393e-01],
                [8.85556769e-01, -1.00533223e-01],
                [4.23802525e-01, -3.82384092e-01],
                [-6.74703712e-01, -5.38006374e-01],
                [5.54638853e-01, -5.98437973e-01],
                [2.68093528e-01, 2.72438351e-01],
                [-1.18775405e00, -3.91898627e-01],
                [2.08750607e-01, 4.27589570e-01],
                [-9.45040504e-02, -1.84155042e-01],
                [6.83080541e-01, -4.27347842e-01],
                [-1.42072297e00, 8.49115165e-02],
                [-5.90957577e-01, 2.12620927e-01],
                [9.93619830e-01, -4.01700340e-01],
                [-2.46351251e-01, -4.54156167e-01],
                [1.71617538e00, -1.31319285e00],
                [4.17856114e-01, 5.70480513e-01],
                [-1.17350879e00, 4.21204837e-01],
                [-1.69492396e00, -1.95769966e-01],
                [1.87578620e00, 1.11075556e00],
                [8.81537513e-01, -5.77520205e-01],
                [-1.87292325e-01, -2.61409500e-01],
                [-1.08323918e-01, -8.98163455e-02],
                [3.57247404e-01, -1.57794936e-01],
                [8.17129571e-01, 6.14843166e-01],
                [-5.21676194e-01, 7.02762491e-01],
                [2.25401879e-01, 6.13977868e-01],
                [2.00231035e-04, -1.78033680e-01],
                [8.66412829e-02, -9.45839866e-01],
                [-7.92146553e-01, -6.38161793e-01],
                [-2.38909834e-03, 2.75050184e-01],
                [9.99687332e-01, 3.10209034e-01],
                [1.50776210e00, -1.74610866e-01],
                [-1.34582937e-01, 3.04807971e-01],
                [1.07899817e00, 2.62070938e-01],
                [-9.55935568e-01, 1.37147737e-01],
                [-6.19099806e-01, -5.51086740e-01],
                [4.14495283e-01, 6.09840227e-01],
                [2.65751929e-01, 1.73454951e-01],
                [-3.93753562e-01, -1.71465959e-01],
                [2.05085966e-01, 5.20563083e-03],
                [-9.78481689e-02, -3.94415475e-01],
                [3.83424293e-01, -5.42804708e-01],
                [-6.70418572e-01, 3.52612927e-01],
                [1.32240367e00, -2.44591693e-01],
                [-7.68338007e-01, 5.65620883e-01],
                [-1.17454890e00, -7.84669216e-01],
                [5.19530687e-01, -1.59813578e-01],
                [-1.35714510e-01, 2.51690725e-01],
                [5.72994125e-01, -1.71627075e-01],
                [4.57878472e-01, -2.32761945e-01],
                [-2.68241373e-01, -6.99352047e-01],
                [-9.45539884e-01, 1.09144195e00],
                [1.23002583e00, -4.90519872e-01],
                [-1.21493303e00, -1.69579283e-01],
                [8.75069924e-01, -7.74439810e-01],
                [-6.38121731e-01, -6.49726334e-01],
                [-1.14652540e00, 1.21188708e-01],
                [7.96366506e-01, 2.54017307e-01],
                [4.82237149e-01, 6.37803004e-02],
                [2.19686401e00, 3.48518387e-01],
                [-1.02591592e-01, -2.35851361e-01],
                [-2.15355413e00, -2.83417134e-01],
                [1.57455444e00, 2.53923578e-01],
                [-2.42666353e-01, 1.98906151e-01],
                [-3.68787836e-01, -1.79309827e-01],
                [7.23756144e-01, -3.33230616e-01],
                [-2.70906668e-01, 1.35204291e-03],
                [1.08938743e-01, -6.04690974e-03],
                [-1.56476495e00, -5.58473029e-02],
            ]
        )

        np.testing.assert_array_almost_equal(
            np.abs(scores_multi), np.abs(expected_scores), decimal=2
        )


class TestTransformInnPro(unittest.TestCase):
    def setUp(self):
        warnings.simplefilter("ignore", category=UserWarning)

        fname = THIS_DIR.parent / "data/data_noisy_5_100_005.pickle"
        with open(fname, "rb") as handle:
            self.fdata = pickle.load(handle)

        fname = THIS_DIR.parent / "data/data_sparse_5_100_08.pickle"
        with open(fname, "rb") as handle:
            self.fdata_sparse = pickle.load(handle)

    def test_innpro_dense(self):
        uf_dense = UFPCA(n_components=2, method="inner-product")
        uf_dense.fit(self.fdata)

        scores_dense = scores_dense = _transform_innpro(
            self.fdata, uf_dense._eigenvectors, uf_dense.eigenvalues
        )
        expected_scores = np.array(
            [
                [-3.10896539e-01, -3.35471460e-01],
                [1.88738896e-01, 2.46286972e-02],
                [-5.27621830e-01, -5.51483869e-02],
                [1.87932422e-01, -1.36880439e-01],
                [-3.87450654e-01, -5.28202547e-02],
                [-4.17383131e-01, 1.76987803e-02],
                [5.20436433e-01, 1.04624469e-01],
                [6.19195708e-01, 1.45890419e-01],
                [1.11394668e-01, 7.47631274e-02],
                [-4.80378070e-01, 1.20978946e-01],
                [6.92970828e-01, 1.62148130e-01],
                [-3.99743213e-01, 1.89502502e-01],
                [-1.11213036e-01, -2.47038224e-01],
                [8.92101206e-02, -2.34977131e-01],
                [6.12839067e-01, -5.24484050e-01],
                [-1.31372200e-01, -2.04538752e-01],
                [4.23686477e-01, -2.35765723e-02],
                [-4.19806400e-02, -2.55485806e-01],
                [2.81974031e-01, 9.82575278e-02],
                [6.84610303e-01, -5.01326450e-01],
                [-3.12528231e-01, 1.80488341e-01],
                [1.96555742e-01, -3.68006053e-01],
                [5.92927095e-01, 3.62388458e-01],
                [-4.68898384e-01, -2.70109147e-01],
                [-5.25473188e-01, -2.97952527e-01],
                [4.04933613e-01, 4.58026908e-01],
                [9.99971541e-02, -1.95583755e-01],
                [-1.04340139e00, -4.43970237e-01],
                [1.21760311e00, -4.06499777e-01],
                [-9.22515686e-02, -3.80044338e-01],
                [1.10990188e00, -2.26910143e-01],
                [-3.58085401e-01, 2.67335455e-01],
                [-6.20444278e-01, 6.74498850e-02],
                [-2.73896509e-01, 2.73085752e-01],
                [4.75935607e-01, 3.81217091e-01],
                [-3.88429067e-01, 4.16035705e-01],
                [-2.10442356e-01, -2.18979218e-01],
                [8.41738251e-01, 2.71276661e-01],
                [-1.34194165e-01, -3.23626094e-01],
                [6.72089760e-02, 1.32099792e-01],
                [-4.86887449e-01, 3.16029143e-01],
                [1.00891697e00, -6.05324600e-02],
                [4.37498836e-01, -1.32862727e-01],
                [-7.02086826e-01, 2.71799501e-01],
                [1.93933505e-01, 3.35996676e-01],
                [-1.22090716e00, 9.30939896e-01],
                [-2.94404301e-01, -4.13574831e-01],
                [8.14133110e-01, -2.99062716e-01],
                [1.19620140e00, 1.47829315e-01],
                [-1.31751184e00, -7.90562794e-01],
                [-6.29050595e-01, 4.25513820e-01],
                [1.26794505e-01, 1.82166295e-01],
                [6.22314952e-02, 6.78079149e-02],
                [-2.81575933e-01, 1.38140344e-01],
                [-5.68262379e-01, -4.42856479e-01],
                [3.67735994e-01, -5.13486597e-01],
                [-1.67905499e-01, -4.55413169e-01],
                [-5.07580579e-03, 1.20788130e-01],
                [-7.81607447e-02, 6.59572667e-01],
                [5.57325188e-01, 4.61740606e-01],
                [1.42306583e-02, -1.88626619e-01],
                [-7.04962918e-01, -2.41113741e-01],
                [-1.06728793e00, 1.23523347e-01],
                [1.02205341e-01, -2.38407277e-01],
                [-7.71672542e-01, -2.09611089e-01],
                [6.67184236e-01, -1.05019174e-01],
                [4.41206993e-01, 3.86780799e-01],
                [-2.93382981e-01, -4.31382220e-01],
                [-1.70612661e-01, -1.42388111e-01],
                [2.89369935e-01, 1.02765468e-01],
                [-1.38537487e-01, 6.08173682e-04],
                [8.86596519e-02, 2.76201435e-01],
                [-2.72299376e-01, 3.83861671e-01],
                [4.88303629e-01, -2.61455403e-01],
                [-9.46847917e-01, 1.58276444e-01],
                [5.36830890e-01, -3.93593133e-01],
                [8.29286556e-01, 5.41386140e-01],
                [-3.64405185e-01, 1.19788687e-01],
                [7.66506400e-02, -1.78142186e-01],
                [-4.12450593e-01, 1.25744402e-01],
                [-3.17013420e-01, 1.67448108e-01],
                [1.91291601e-01, 5.05936178e-01],
                [6.70587405e-01, -7.60605115e-01],
                [-8.66157215e-01, 3.63184828e-01],
                [8.48876582e-01, 1.15949134e-01],
                [-6.15615482e-01, 5.16771781e-01],
                [4.67605074e-01, 4.59200925e-01],
                [8.25261137e-01, -1.08857970e-01],
                [-5.52245333e-01, -1.94038923e-01],
                [-3.30378040e-01, -5.44379850e-02],
                [-1.57359353e00, -2.41290866e-01],
                [6.75838069e-02, 1.66562906e-01],
                [1.55122335e00, 1.91012261e-01],
                [-1.11931385e00, -1.76853889e-01],
                [1.83761785e-01, -1.30757384e-01],
                [2.64569327e-01, 1.23603115e-01],
                [-5.17211811e-01, 2.18117802e-01],
                [2.01221025e-01, -3.95016494e-03],
                [-8.11734839e-02, -1.85903014e-02],
                [1.11260313e00, 3.79575804e-02],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_dense), np.abs(expected_scores), decimal=3
        )

    def test_innpro_irregular(self):
        uf_sparse = UFPCA(n_components=2, method="inner-product")
        uf_sparse.fit(self.fdata_sparse, method_smoothing="PS")

        scores_sparse = _transform_innpro(
            self.fdata_sparse, uf_sparse._eigenvectors, uf_sparse.eigenvalues
        )
        expected_scores = np.array(
            [
                [0.33159776, 0.35070491],
                [-0.16901054, -0.01337699],
                [0.51381508, 0.02981922],
                [-0.16170391, 0.16340227],
                [0.36975415, 0.05729021],
                [0.39464798, -0.04660427],
                [-0.50459813, -0.09588939],
                [-0.61287418, -0.12472811],
                [-0.12665931, -0.07252696],
                [0.47290339, -0.09087732],
                [-0.64449229, -0.17554319],
                [0.42274431, -0.15955005],
                [0.1401139, 0.25848624],
                [-0.06751717, 0.26097013],
                [-0.57419279, 0.46550238],
                [0.14343143, 0.19759455],
                [-0.43982511, 0.04790197],
                [0.03972971, 0.21073886],
                [-0.27269411, -0.04188163],
                [-0.70200407, 0.47117137],
                [0.27857515, -0.16476365],
                [-0.19233628, 0.3835913],
                [-0.60514195, -0.3548231],
                [0.46200051, 0.287055],
                [0.49480854, 0.2806945],
                [-0.427926, -0.47748117],
                [-0.10206078, 0.22148522],
                [1.02575876, 0.40940543],
                [-1.16892523, 0.37204605],
                [0.06985269, 0.3960696],
                [-1.15389877, 0.23386418],
                [0.35809498, -0.27773503],
                [0.6270715, -0.06642396],
                [0.32397148, -0.26629271],
                [-0.48041632, -0.3735245],
                [0.39259136, -0.42592393],
                [0.16663894, 0.17493299],
                [-0.84486686, -0.27820042],
                [0.16042429, 0.29449616],
                [-0.06971175, -0.12575498],
                [0.47655825, -0.28488861],
                [-1.00342759, 0.06782046],
                [-0.40148688, 0.18037331],
                [0.70345422, -0.28831338],
                [-0.15524753, -0.30007165],
                [1.20481398, -0.92163308],
                [0.29239189, 0.40119877],
                [-0.85196138, 0.30517827],
                [-1.21012512, -0.12485115],
                [1.33826371, 0.79479348],
                [0.61538235, -0.38968964],
                [-0.13981916, -0.18158755],
                [-0.09414408, -0.05310148],
                [0.22306984, -0.07841875],
                [0.5872093, 0.43334716],
                [-0.37460823, 0.49192288],
                [0.15339733, 0.42858228],
                [-0.0093466, -0.12714353],
                [0.04062769, -0.67229034],
                [-0.56767798, -0.43369201],
                [0.00497739, 0.20675802],
                [0.70655416, 0.2093644],
                [1.06313458, -0.12033777],
                [-0.08994389, 0.20171778],
                [0.75111709, 0.16951475],
                [-0.68826462, 0.09781304],
                [-0.43818776, -0.38507341],
                [0.29105255, 0.44036123],
                [0.20138022, 0.11025028],
                [-0.27200086, -0.13542613],
                [0.15067826, 0.0089768],
                [-0.05280329, -0.27424592],
                [0.26752691, -0.37992032],
                [-0.46375066, 0.24581798],
                [0.92137673, -0.18247285],
                [-0.54999602, 0.41750146],
                [-0.8346727, -0.56149212],
                [0.36892274, -0.10009256],
                [-0.11711336, 0.18523918],
                [0.39529088, -0.11451583],
                [0.32911534, -0.16326054],
                [-0.19311884, -0.47782584],
                [-0.66886953, 0.79655738],
                [0.87169746, -0.32692589],
                [-0.87450652, -0.11467509],
                [0.62241836, -0.57075937],
                [-0.44049115, -0.45644923],
                [-0.79951313, 0.06805681],
                [0.57290042, 0.17322859],
                [0.34858908, 0.0381373],
                [1.53470331, 0.25773803],
                [-0.08032269, -0.16089487],
                [-1.49986882, -0.20350511],
                [1.10718034, 0.18858569],
                [-0.16269042, 0.15584672],
                [-0.26231863, -0.12722323],
                [0.50531143, -0.24688279],
                [-0.18553887, 0.00268655],
                [0.06832064, -0.0222447],
                [-1.10327047, -0.03278506],
            ]
        )
        np.testing.assert_array_almost_equal(
            np.abs(scores_sparse), np.abs(expected_scores), decimal=3
        )
